{"version":3,"sources":["configs/Session.ts","components/Alert.tsx","screens/Home.tsx","screens/Login.tsx","images/logo.png","components/Header.tsx","components/Footer.tsx","screens/NotFound.tsx","configs/Api.ts","configs/Utils.ts","configs/Validations.ts","models/Authenticate.ts","screens/AdminLogin.tsx","screens/AdminHome.tsx","components/HeaderAdmin.tsx","models/base/Base.ts","models/Scholarity.ts","components/TableRow/AdminScholarityTr.tsx","screens/AdminScholarity.tsx","models/ArmedForce.ts","components/TableRow/AdminArmedForceTr.tsx","screens/AdminArmedForce.tsx","models/Subject.ts","components/TableRow/AdminSubjectTr.tsx","screens/AdminSubject.tsx","models/SubjectMatter.ts","components/TableRow/AdminSubjectMatterTr.tsx","models/SelectModel.ts","screens/AdminSubjectMatter.tsx","models/Patent.ts","components/TableRow/AdminPatentTr.tsx","screens/AdminPatent.tsx","models/Contest.ts","components/TableRow/AdminContestTr.tsx","screens/AdminContest.tsx","screens/AdminQuestion.tsx","models/Alternative.ts","models/QuestionText.ts","components/AdminQuestionAddForm.tsx","models/Question.ts","screens/AdminQuestionAdd.tsx","screens/AdminQuestionUpdate.tsx","components/TableRow/AdminQuestionTextTr.tsx","screens/AdminQuestionText.tsx","screens/AdminAlternative.tsx","navigations/AppNavigator.tsx","App.tsx","index.tsx","styles/adminHome.module.css","styles/headerAdmin.module.css","styles/admin.module.css","styles/header.module.css","styles/adminLogin.module.css","styles/notFound.module.css","styles/footer.module.css"],"names":["Session","TOKEN_KEY","TOKEN_KEY_ADMIN","USER","ADMIN","EXPORTPAGE","isAuthenticated","localStorage","getItem","gItem","item","JSON","parse","data","Date","date","valueOf","getTimezoneOffset","toISOString","tokenExpires","isAuthenticatedAdmin","getToken","getTokenAdmin","login","token","user","setItem","stringify","logout","removeItem","loginAdmin","admin","logoutAdmin","getUser","error","console","log","getAdmin","name","state","useState","showAlert","setShowAlert","alertDisplay","setAlertDisplay","alertClass","setAlertClass","alertMessage","setAlertMessage","alertType","setAlertType","setAlert","message","type","setTimeout","useEffect","className","style","display","data-dismiss","aria-label","aria-hidden","Home","props","Alert","location","Login","Header","Navbar","styles","header","expand","collapseOnSelect","Brand","as","Link","to","navbar_brand","img_logo","src","logo","alt","Toggle","aria-controls","nav_toggle","Collapse","id","Nav","nav_link","icon","faUser","nav_icon","Footer","div_footer","NotFound","div_full","Card","body","card_login","div_img_logo","h_registration","Api","BASE_URL","accessToken","a","axios","get","headers","then","res","catch","Promise","reject","response","getUserById","insertUser","model","post","authenticateUser","updateUser","put","deleteUser","delete","resetPasswordUser","newPassword","getAdminById","insertAdmin","authenticateAdmin","updateAdmin","deleteAdmin","resetPasswordAdmin","getAlternative","getAlternativeById","insertAlternative","updateAlternative","deleteAlternative","getArmedForce","getArmedForceById","insertArmedForce","updateArmedForce","deleteArmedForce","getContest","getContestById","insertContest","updateContest","deleteContest","getContestSubject","getContestSubjectById","insertContestSubject","updateContestSubject","deleteContestSubject","getCoupon","getCouponById","insertCoupon","updateCoupon","deleteCoupon","getPatent","getPatentById","insertPatent","updatePatent","deletePatent","getPlan","getPlanById","insertPlan","updatePlan","deletePlan","getQuestion","getQuestionById","insertQuestion","updateQuestion","deleteQuestion","getQuestionAnswer","getQuestionAnswerById","insertQuestionAnswer","updateQuestionAnswer","deleteQuestionAnswer","getQuestionText","getQuestionTextById","insertQuestionText","updateQuestionText","deleteQuestionText","getScholarity","getScholarityById","insertScholarity","updateScholarity","deleteScholarity","getShopping","getShoppingById","insertShopping","updateShopping","deleteShopping","getSubject","getSubjectById","insertSubject","updateSubject","deleteSubject","getSubjectMatter","getSubjectMatterById","getSubjectMatterBySubjectId","subjectId","insertSubjectMatter","updateSubjectMatter","deleteSubjectMatter","getImageByFilename","filename","getImageByBrowser","insertImage","formData","FormData","append","Utils","removeDiacritics","value","replace","currencyValue","toFixed","onlyLetterMask","onlyNumberMask","formatDate","d","month","getMonth","day","getDate","year","getFullYear","length","join","newDate","formatDateSplitView","string","dateSplit","split","formatDatePtBr","now","toLocaleDateString","toTimeString","numberPhoneMask","groupBy","xs","key","reduce","rv","x","push","alertLocalStorage","isSuccess","Validations","validateRequiredField","field","nameField","undefined","validateUsername","username","validatePassword","password","AuthenticateModel","AdminLogin","setUsername","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","inputPassword","setInputPassword","btnTxt","setBtnTxt","api","history","useHistory","Form","onSubmit","event","preventDefault","Spinner","animation","variant","size","uError","pError","userLogged","Group","controlId","Label","form_label_login","Control","placeholder","onChange","e","target","form_control_login","Text","Check","label","onClick","btn_login","AdminHome","handleCardMenu","url","div_home","h_home","div_row_menu","card_menu","Body","card_body_menu","faPen","icon_menu","faGraduationCap","faShoppingCart","faDollarSign","faBook","faLocationArrow","faMedal","faSchool","HeaderAdmin","Base","uuid","registerDate","Scholarity","AdminScholarityTr","scholarity","scholarities","setScholarities","displayTr","setDisplayTr","setName","nameError","setNameError","btnDisable","setBtnDisable","btnTxtDelete","setBtnTxtDelete","btnDeleteDisable","setBtnDeleteDisable","handleDelete","window","confirm","newSch","filter","s","alert","err","td_buttons","btn_table_primary","btn_table_secondary","disabled","colSpan","nError","newModel","map","update","form_label","form_control","btn_add","AdminScholarity","Array","isLoading","setIsLoading","h_title","Accordion","div_buttons","eventKey","btn_menu","add","Table","responsive","k","ArmedForce","AdminArmedForceTr","armedForce","armedForces","setArmedForces","AdminArmedForce","Subject","AdminSubjectTr","subject","subjects","setSubjects","AdminSubject","SubjectMatter","AdminSubjectMatterTr","subjectMatter","subjectMatters","setSubjectMatters","optionSubjectSelect","subjectSelect","setSubjectSelect","subjectError","setSubjectError","find","sError","options","menuPlacement","menuPosition","SelectModel","this","AdminSubjectMatter","setOptionSubjectSelect","opSelect","forEach","g","cSel","Patent","AdminPatentTr","patent","patents","setPatents","AdminPatent","Contest","armedForceId","patentId","salary","questionsLength","questionDescription","registration","testDate","vacancies","vacanciesDescription","requirements","scholarityId","areas","locations","duration","site","AdminContestTr","contest","contests","setContests","optionArmedForceSelect","optionPatentSelect","optionScholaritySelect","setYear","yearError","setYearError","armedForceSelect","setArmedForceSelect","armedForceError","setArmedForceError","patentSelect","setPatentSelect","patentError","setPatentError","scholaritySelect","setScholaritySelect","scholarityError","setScholarityError","setSalary","setQuestionsLength","setQuestionDescription","setVacancies","setVacanciesDescription","setTestDate","setRequirements","setRegistration","setAreas","setLocations","setDuration","setSite","yError","toString","aFError","form_label_required","min","max","minLength","maxLength","step","rows","AdminContest","setOptionArmedForceSelect","setOptionPatentSelect","setOptionScholaritySelect","models","AdminQuestion","questions","setQuestions","ask","Alternative","text","questionId","position","isCorrect","QuestionText","AdminQuestionAddForm","question","questionTexts","contestSelect","setContestSelect","optionContestSelect","setOptionContestSelect","subjectMatterSelect","setSubjectMatterSelect","optionSubjectMatterSelect","setOptionSubjectMatterSelect","questionTextSelect","setQuestionTextSelect","optionQuestionTextSelect","setOptionQuestionTextSelect","setText","textError","setTextError","btnTextDisable","setBtnTextDisable","displayQuestionText","setDisplayQuestionText","btnText","setBtnText","cSelect","contestId","sSelect","subjectMatterId","qtSelect","questionTextId","handleInsertImage","files","from","f","imageUrl","image","fileUrl","handleSetProperty","handleAddQuestionText","tError","questionText","select","concat","handleSetPropertySelect","setSelect","i","div_btn_remove","btn_remove_alternative","findIndex","newQuestions","handleRemoveQuestion","title","faMinusCircle","btn_add_alternative","newAlt","alternatives","handleAddAlternative","htmlFor","input_file","accept","multiple","index","handleSetAlternative","_","handleRemoveAlternative","btn_incorrect_alternative","btn_correct_alternative","handleSetAlternativeCorrect","faCheckCircle","defaultChecked","isCanceled","solution","dangerouslySetInnerHTML","__html","whiteSpace","fontWeight","Question","AdminQuestionAdd","setQuestionTexts","handleSubmit","errors","cError","sMError","aError","indexOf","q","newQuestion","lastQuestion","handleAddQuestion","AdminQuestionUpdate","setAsk","askError","setAskError","AdminQuestionTextTr","AdminQuestionText","AdminAlternative","questionSelect","setQuestionSelect","optionQuestionSelect","setOptionQuestionSelect","setIsCorrect","setPosition","cols","PrivateRoute","Component","component","rest","render","pathname","PrivateRouteAdmin","AppNavigator","path","exact","App","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0a74cf63.chunk.js","sourcesContent":["import { AdminAuthenticate } from \"../models/Admin\";\nimport { UserAuthenticate } from \"../models/User\";\n\nexport class Session {\n\n    static TOKEN_KEY = \"Token\";\n    static TOKEN_KEY_ADMIN = \"Token_ADN\";\n    static USER = \"USR\";\n    static ADMIN = \"ADN\";\n    static EXPORTPAGE = \"EXPPG\";\n\n    static isAuthenticated = () => {\n\n        if(localStorage.getItem(Session.TOKEN_KEY) !== null)\n        {\n            var gItem = localStorage.getItem(Session.USER) as string;\n            var item = JSON.parse(gItem) as UserAuthenticate;\n\n            var data = new Date();\n            var date = new Date(data.valueOf() - (data.getTimezoneOffset() * 60000)).toISOString();\n            if(item.tokenExpires < date)\n            {\n                return false;\n            }\n\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    static isAuthenticatedAdmin = () => {\n        \n        if(localStorage.getItem(Session.TOKEN_KEY_ADMIN) !== null)\n        {\n            var gItem = localStorage.getItem(Session.ADMIN) as string;\n            var item = JSON.parse(gItem) as AdminAuthenticate;\n\n            var data = new Date();\n            var date = new Date(data.valueOf() - (data.getTimezoneOffset() * 60000)).toISOString();\n            \n            if(item.tokenExpires < date)\n            {\n                return false;\n            }\n\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    static getToken = () => localStorage.getItem(Session.TOKEN_KEY);\n\n    static getTokenAdmin = () => localStorage.getItem(Session.TOKEN_KEY_ADMIN);\n\n    static login = (token: string, user: UserAuthenticate) => {\n        localStorage.setItem(Session.TOKEN_KEY, token);\n        localStorage.setItem(Session.USER, JSON.stringify(user));\n    }\n    \n    static logout = () => {\n        localStorage.removeItem(Session.TOKEN_KEY);\n        localStorage.removeItem(Session.USER);\n    }\n    \n    static loginAdmin = (token: string, admin: AdminAuthenticate) => {\n        localStorage.setItem(Session.TOKEN_KEY_ADMIN, token);\n        localStorage.setItem(Session.ADMIN, JSON.stringify(admin));\n    }\n\n    static logoutAdmin = () => {\n      localStorage.removeItem(Session.TOKEN_KEY_ADMIN);\n      localStorage.removeItem(Session.ADMIN);\n    }\n\n    static getUser = () => {\n        var gItem = localStorage.getItem(Session.USER) as string;\n\n        try {\n            return JSON.parse(gItem);\n        }\n        catch (error) {\n            console.log(error);\n            return undefined;\n        }\n    }\n\n    static getAdmin = () => {\n        var gItem = localStorage.getItem(Session.ADMIN) as string;\n\n        try {\n            return JSON.parse(gItem);\n        }\n        catch (error) {\n            console.log(error);\n            return undefined;\n        }\n    }\n\n    static getItem = <T>(item: string) : T | undefined => {\n        var gItem = localStorage.getItem(item) as string;\n\n        try {\n            return JSON.parse(gItem);\n        }\n        catch (error) {\n            console.log(error);\n            return undefined;\n        }\n    }\n\n    static setItem = <T>(name: string, item: T) => {\n        localStorage.setItem(name, JSON.stringify(item));\n    }\n\n    static removeItem = (item: string) => {\n        localStorage.removeItem(item);\n    }\n}\n","import { useEffect, useState } from \"react\";\n\nexport default ({ state }: any) => {\n\n    const [showAlert, setShowAlert] = useState(false);\n    const [alertDisplay, setAlertDisplay] = useState(\"none\");\n    const [alertClass, setAlertClass] = useState<string | null>();\n    const [alertMessage, setAlertMessage] = useState<string | null>();\n    const [alertType, setAlertType] = useState<string | null>();\n\n    const setAlert = () => {\n\n        if(typeof state !== 'undefined' || localStorage.getItem('alert-message') != null)\n        {\n            const message = typeof state !== 'undefined' ? state.alertMessage : localStorage.getItem('alert-message');\n            const type = typeof state !== 'undefined' ? state.alertType : localStorage.getItem('alert-type');\n\n            setAlertType(type);\n            setAlertMessage(message);\n            setShowAlert(true);\n            \n            setTimeout(function () {\n                setAlertDisplay(\"block\");\n                setAlertClass('show');\n            }, 500);\n            \n            setTimeout(function () {\n                setAlertClass('');\n            }, 5000);\n            \n            setTimeout(function () {\n              setAlertDisplay(\"none\");\n            }, 5500);\n\n            localStorage.removeItem('alert-message');\n            localStorage.removeItem('alert-type');\n        }\n    }\n\n    useEffect(() => {\n        setAlert();\n    }, [setAlert]);\n\n    useEffect(() => {\n        setAlert();\n    }, [localStorage.getItem('alert-message')]);\n\n    return (\n        <div>\n            {showAlert ?\n            <div \n                className={`alert ${alertType} alert-dismissible fade alert-message ${alertClass}`}\n                style={{ display: alertDisplay }}>\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n                {alertMessage}\n            </div> : <div></div>\n            }\n        </div>\n    )\n}\n","import { useEffect } from \"react\";\nimport Alert from \"../components/Alert\";\nimport { Props } from \"../configs/Props\";\n\nconst Home = (props: Props) => {\n\n    useEffect(() => {\n    }, []);\n\n    return (\n        <div className={``}>\n\n            <Alert state={props.location.state} />\n\n            <div className={``}>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import { useEffect } from \"react\";\nimport Alert from \"../components/Alert\";\nimport { Props } from \"../configs/Props\";\n\nconst Login = (props: Props) => {\n\n    useEffect(() => {\n    }, []);\n\n    return (\n        <div className={``}>\n\n            <Alert state={props.location.state} />\n\n            <div className={``}>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/logo.c12cdb46.png\";","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport styles from '../styles/header.module.css';\nimport logo from '../images/logo.png';\n\nconst Header = () => {\n\n    return (\n        <Navbar className={`${styles.header}`} expand='md' collapseOnSelect>\n            <Navbar.Brand as={Link} to='/' className={`${styles.navbar_brand}`}>\n                <img \n                    className={`${styles.img_logo} img-fluid`} \n                    src={logo}\n                    alt='Logo'\n                />\n            </Navbar.Brand>\n\n            <Navbar.Toggle aria-controls=\"navbar-nav\" className={`${styles.nav_toggle}`} />\n\n            <Navbar.Collapse id=\"navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to=\"/\" className={`${styles.nav_link}`}>Início</Nav.Link>\n                    <Nav.Link as={Link} to=\"/questoes\" className={`${styles.nav_link}`}>Questões</Nav.Link>\n                    <Nav.Link as={Link} to=\"/planos\" className={`${styles.nav_link}`}>Planos</Nav.Link>\n                    <Nav.Link as={Link} to=\"/contato\" className={`${styles.nav_link}`}>Contato</Nav.Link>\n                </Nav>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link as={Link} to=\"/perfil\" className={`${styles.nav_link}`}>\n                        <FontAwesomeIcon icon={faUser} className={`${styles.nav_icon}`} />\n                    </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header;","import styles from '../styles/footer.module.css';\n\nconst Footer = () => {\n\n    return (\n        <div className={`${styles.div_footer}`}>\n            <p>Copyright Ser Militar 2021 @ Todos os direitos reservados.</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport logo from '../images/logo.png';\nimport styles from '../styles/notFound.module.css';\n\nconst NotFound = () => {\n\n    return (\n        <div className={`${styles.div_full}`}>\n\n            <Card body className={`${styles.card_login}`}>\n                <div className={`${styles.div_img_logo} mb-3`}>\n                    <img src={logo} className={`${styles.img_logo} img-fluid center`} alt='logo' />\n                </div>\n\n                <div className={`text-center`}>\n                    <h2 className={`${styles.h_registration}`}>Página não encontrada!</h2>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default NotFound;\n","import axios from \"axios\";\nimport { Admin } from \"../models/Admin\";\nimport { Alternative } from \"../models/Alternative\";\nimport { ArmedForce } from \"../models/ArmedForce\";\nimport { AuthenticateModel } from \"../models/Authenticate\";\nimport { Contest } from \"../models/Contest\";\nimport { ContestSubject } from \"../models/ContestSubject\";\nimport { Coupon } from \"../models/Coupon\";\nimport { Patent } from \"../models/Patent\";\nimport { Plan } from \"../models/Plan\";\nimport { Question } from \"../models/Question\";\nimport { QuestionAnswer } from \"../models/QuestionAnswer\";\nimport { QuestionText } from \"../models/QuestionText\";\nimport { Scholarity } from \"../models/Scholarity\";\nimport { Shopping } from \"../models/Shopping\";\nimport { Subject } from \"../models/Subject\";\nimport { SubjectMatter } from \"../models/SubjectMatter\";\nimport { User } from \"../models/User\";\nimport { Session } from \"./Session\";\n\nexport class Api {\n\n    BASE_URL = \"https://sermilitar-api.herokuapp.com\";\n    // BASE_URL = \"http://localhost:5000\";\n\n    accessToken = Session.getToken() !== 'undefined' && Session.getToken() !== null ? \n                  Session.getToken() : Session.getTokenAdmin();\n\n    //#region User\n\n    getUser = async () => {\n\n        return await axios.get(`${this.BASE_URL}/user`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getUserById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/user/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertUser = async (model: User) => {\n\n        return await axios.post(`${this.BASE_URL}/user`, model)\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    authenticateUser = async (model: AuthenticateModel) => {\n\n        return await axios.post(`${this.BASE_URL}/user/login`, model)\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error);\n            });\n    }\n\n    updateUser = async (model: User) => {\n\n        return await axios.put(`${this.BASE_URL}/user/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteUser = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/user/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    resetPasswordUser = async (id: string, newPassword: string) => {\n\n        return await axios.post(`${this.BASE_URL}/user/resetPassword/${id}&${newPassword}`, {}, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Admin\n\n    getAdmin = async () => {\n\n        return await axios.get(`${this.BASE_URL}/admin`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getAdminById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/admin/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertAdmin = async (model: Admin) => {\n\n        return await axios.post(`${this.BASE_URL}/admin`, model)\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    authenticateAdmin = async (model: AuthenticateModel) => {\n\n        return await axios.post(`${this.BASE_URL}/admin/login`, model)\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error);\n            });\n    }\n\n    updateAdmin = async (model: Admin) => {\n\n        return await axios.put(`${this.BASE_URL}/admin/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteAdmin = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/admin/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    resetPasswordAdmin = async (id: string, newPassword: string) => {\n\n        return await axios.post(`${this.BASE_URL}/admin/resetPassword/${id}&${newPassword}`, {}, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Alternative\n\n    getAlternative = async () => {\n\n        return await axios.get(`${this.BASE_URL}/alternative`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getAlternativeById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/alternative/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertAlternative = async (model: Alternative) => {\n\n        return await axios.post(`${this.BASE_URL}/alternative`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateAlternative = async (model: Alternative) => {\n\n        return await axios.put(`${this.BASE_URL}/alternative/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteAlternative = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/alternative/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n    \n    //#region ArmedForce\n\n    getArmedForce = async () => {\n\n        return await axios.get(`${this.BASE_URL}/armedForce`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getArmedForceById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/armedForce/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertArmedForce = async (model: ArmedForce) => {\n\n        return await axios.post(`${this.BASE_URL}/armedForce`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateArmedForce = async (model: ArmedForce) => {\n\n        return await axios.put(`${this.BASE_URL}/armedForce/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteArmedForce = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/armedForce/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Contest\n\n    getContest = async () => {\n\n        return await axios.get(`${this.BASE_URL}/contest`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getContestById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/contest/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertContest = async (model: Contest) => {\n\n        return await axios.post(`${this.BASE_URL}/contest`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateContest = async (model: Contest) => {\n\n        return await axios.put(`${this.BASE_URL}/contest/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteContest = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/contest/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region ContestSubject\n\n    getContestSubject = async () => {\n\n        return await axios.get(`${this.BASE_URL}/contestSubject`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getContestSubjectById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/contestSubject/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertContestSubject = async (model: ContestSubject) => {\n\n        return await axios.post(`${this.BASE_URL}/contestSubject`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateContestSubject = async (model: ContestSubject) => {\n\n        return await axios.put(`${this.BASE_URL}/contestSubject/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteContestSubject = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/contestSubject/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Coupon\n\n    getCoupon = async () => {\n\n        return await axios.get(`${this.BASE_URL}/coupon`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getCouponById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/coupon/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertCoupon = async (model: Coupon) => {\n\n        return await axios.post(`${this.BASE_URL}/coupon`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateCoupon = async (model: Coupon) => {\n\n        return await axios.put(`${this.BASE_URL}/coupon/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteCoupon = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/coupon/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Patent\n\n    getPatent = async () => {\n\n        return await axios.get(`${this.BASE_URL}/patent`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getPatentById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/patent/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertPatent = async (model: Patent) => {\n\n        return await axios.post(`${this.BASE_URL}/patent`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updatePatent = async (model: Patent) => {\n\n        return await axios.put(`${this.BASE_URL}/patent/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deletePatent = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/patent/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Plan\n\n    getPlan = async () => {\n\n        return await axios.get(`${this.BASE_URL}/plan`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getPlanById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/plan/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertPlan = async (model: Plan) => {\n\n        return await axios.post(`${this.BASE_URL}/plan`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updatePlan = async (model: Plan) => {\n\n        return await axios.put(`${this.BASE_URL}/plan/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deletePlan = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/plan/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Question\n\n    getQuestion = async () => {\n\n        return await axios.get(`${this.BASE_URL}/question`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getQuestionById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/question/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertQuestion = async (model: Question) => {\n\n        return await axios.post(`${this.BASE_URL}/question`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateQuestion = async (model: Question) => {\n\n        return await axios.put(`${this.BASE_URL}/question/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteQuestion = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/question/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region QuestionAnswer\n\n    getQuestionAnswer = async () => {\n\n        return await axios.get(`${this.BASE_URL}/questionAnswer`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getQuestionAnswerById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/questionAnswer/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertQuestionAnswer = async (model: QuestionAnswer) => {\n\n        return await axios.post(`${this.BASE_URL}/questionAnswer`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateQuestionAnswer = async (model: QuestionAnswer) => {\n\n        return await axios.put(`${this.BASE_URL}/questionAnswer/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteQuestionAnswer = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/questionAnswer/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region QuestionText\n\n    getQuestionText = async () => {\n\n        return await axios.get(`${this.BASE_URL}/questionText`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getQuestionTextById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/questionText/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertQuestionText = async (model: QuestionText) => {\n\n        return await axios.post(`${this.BASE_URL}/questionText`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateQuestionText = async (model: QuestionText) => {\n\n        return await axios.put(`${this.BASE_URL}/questionText/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteQuestionText = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/questionText/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Scholarity\n\n    getScholarity = async () => {\n\n        return await axios.get(`${this.BASE_URL}/scholarity`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getScholarityById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/scholarity/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertScholarity = async (model: Scholarity) => {\n\n        return await axios.post(`${this.BASE_URL}/scholarity`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateScholarity = async (model: Scholarity) => {\n\n        return await axios.put(`${this.BASE_URL}/scholarity/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteScholarity = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/scholarity/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Shopping\n\n    getShopping = async () => {\n\n        return await axios.get(`${this.BASE_URL}/shopping`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getShoppingById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/shopping/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertShopping = async (model: Shopping) => {\n\n        return await axios.post(`${this.BASE_URL}/shopping`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateShopping = async (model: Shopping) => {\n\n        return await axios.put(`${this.BASE_URL}/shopping/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteShopping = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/shopping/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Subject\n\n    getSubject = async () => {\n\n        return await axios.get(`${this.BASE_URL}/subject`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getSubjectById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/subject/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertSubject = async (model: Subject) => {\n\n        return await axios.post(`${this.BASE_URL}/subject`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateSubject = async (model: Subject) => {\n\n        return await axios.put(`${this.BASE_URL}/subject/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteSubject = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/subject/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region SubjectMatter\n\n    getSubjectMatter = async () => {\n\n        return await axios.get(`${this.BASE_URL}/subjectMatter`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getSubjectMatterById = async (id: string) => {\n\n        return await axios.get(`${this.BASE_URL}/subjectMatter/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getSubjectMatterBySubjectId = async (subjectId: string) => {\n\n        return await axios.get(`${this.BASE_URL}/subjectMatter/subject/${subjectId}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertSubjectMatter = async (model: SubjectMatter) => {\n\n        return await axios.post(`${this.BASE_URL}/subjectMatter`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    updateSubjectMatter = async (model: SubjectMatter) => {\n\n        return await axios.put(`${this.BASE_URL}/subjectMatter/${model.id}`, model, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    deleteSubjectMatter = async (id: string) => {\n\n        return await axios.delete(`${this.BASE_URL}/subjectMatter/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n    //#region Image\n\n    getImageByFilename = async (filename: string) => {\n\n        return await axios.get(`${this.BASE_URL}/image/upload/${filename}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    getImageByBrowser = async (filename: string) => {\n\n        return await axios.get(`${this.BASE_URL}/image/upload/browser/${filename}`, {\n            headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n            }\n        })\n            .then((res) => {\n                return res.data;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    insertImage = async (model: File) => {\n\n        var formData = new FormData();\n        formData.append('file', model);\n\n        return await axios.post(`${this.BASE_URL}/image/upload`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `Bearer ${this.accessToken}`,\n            }\n        })\n            .then((res) => {\n                return res;\n            })\n            .catch((error) => {\n                return Promise.reject(error.response.data);\n            });\n    }\n\n    //#endregion\n\n}","\nexport class Utils {\n\n    static removeDiacritics = (value: string) => {\n        return value\n            .replace(\" \", \"\")\n            .replace(\"+\", \"\")\n            .replace(\":\", \"\")\n            .replace(\".\", \"\")\n            .replace(\".\", \"\")\n            .replace(\"-\", \"\")\n            .replace(\"/\", \"\")\n            .replace(\"(\", \"\")\n            .replace(\")\", \"\");\n    }\n\n    static currencyValue = (value: Number) => {\n        return value?.toFixed(2).replace(',', '.').replace('.', ',');\n    }\n\n    static onlyLetterMask = (value: string) => {\n        return value\n            .replace(/[^A-Za-z]/ig, '');\n    }\n\n    static onlyNumberMask = (value: string) => {\n        return value\n            .replace(/[^0-9]/ig, '');\n    }\n\n    static formatDate = (date?: string | undefined) => {\n\n        var d = date != null ? new Date(date!) : new Date(),\n            month = '' + (d.getMonth() + 1),\n            // day = '' + (d.getDate() + 1),\n            day = '' + (d.getDate()),\n            year = d.getFullYear();\n\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    static newDate = (date?: string | undefined) => {\n        var d = date != null ? new Date(date!) : new Date();\n        return new Date(d.getFullYear(), d.getMonth(), !date ? d.getDate() : d.getDate() + 1);\n    }\n\n    static formatDateSplitView = (string: string) => {   \n        var dateSplit = string.split('-');\n        var date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n        return date;\n    }\n\n    static formatDatePtBr = () => {\n\n        var now = new Date();\n        \n        return now.toLocaleDateString('ja', {\n            year:  'numeric',\n            month: '2-digit',\n            day:   '2-digit'\n        }).replace(/\\//g, '-') + ' ' +  now.toTimeString();\n    }\n\n    // static formatDateView = (string: string) => {   \n    //     var options = { year: 'numeric', month: 'long', day: 'numeric' };\n    //     return new Date(string).toLocaleDateString([], options);\n    // }\n\n    static numberPhoneMask = (value: string) => {\n        return value\n            .replace(/\\D/g, '')\n            .replace(/^\\(?([0-9]{2})\\)?[-. ]?([0-9]{5})[-. ]?([0-9]{4})$/, \"($1) $2-$3\");\n    }\n\n    static groupBy = <T>(xs: T[], key: string) => {\n        return xs.reduce(function(rv: any, x: any) {\n            (rv[x[key]] = rv[x[key]] || []).push(x);\n            return rv;\n        }, {});\n    };\n\n    static alertLocalStorage = (message: string, isSuccess: boolean) => {\n        localStorage.setItem('alert-message', message);\n        localStorage.setItem('alert-type', isSuccess ? 'alert-success' : 'alert-danger');\n    }\n}","\nexport class Validations {\n\n    static validateRequiredField = (field: string | undefined | null, nameField: string) => {\n\n        if(!field || field === undefined || field === null) {\n            return `O campo ${nameField} deve ser preenchido!\\n`;\n        }\n        \n        return '';\n    }\n\n    static validateUsername = (username: string) => {\n\n        var error = '';\n\n        if(!username || username === undefined || username === null) {\n            error += 'O e-mail/username deve ser preenchido!\\n';\n        }\n\n        return error;\n    }\n\n    static validatePassword = (password: string) => {\n\n        var error = '';\n\n        if(!password || password === undefined || password === null) {\n            error += 'A senha deve ser preenchida!\\n';\n        }\n\n        if(password?.length < 8) {\n            error += 'A senha deve ter mais de 8 caracteres!\\n';\n        }\n\n        return error;\n    }\n}\n","\nexport class AuthenticateModel {\n\n    username: string = '';\n    \n    password: string = '';\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport Alert from \"../components/Alert\";\nimport { Api } from \"../configs/Api\";\nimport { Props } from \"../configs/Props\";\nimport { Session } from \"../configs/Session\";\nimport { Utils } from \"../configs/Utils\";\nimport { Validations } from \"../configs/Validations\";\nimport { AdminAuthenticate } from \"../models/Admin\";\nimport { AuthenticateModel } from \"../models/Authenticate\";\nimport logo from '../images/logo.png';\nimport styles from '../styles/adminLogin.module.css';\n\nconst AdminLogin = (props: Props) => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [usernameError, setUsernameError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n\n    const [inputPassword, setInputPassword] = useState('password');\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n    \n    const api = new Api();\n    const history = useHistory();\n\n    useEffect(() => {\n\n        if(Session.isAuthenticatedAdmin())\n        {\n            history.push('/admin');  \n        }\n\n        setBtnTxt(\"Entrar\");\n    }, []);\n\n    const changeInputPassword = () => setInputPassword(inputPassword === 'password' ? 'text' : 'password');\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var uError = Validations.validateUsername(username);\n        var pError = Validations.validatePassword(password);\n\n        if(uError || pError)\n        {\n            setUsernameError(uError);\n            setPasswordError(pError);\n            setBtnTxt(\"Entrar\");\n        }\n        else\n        {\n            const login = async () => {\n\n                var user = new AuthenticateModel();\n                user.username = username;\n                user.password = password;\n\n                await api.authenticateAdmin(user)\n                    .then(res => {\n                        var userLogged = res.data as AdminAuthenticate;\n                        console.log(userLogged);\n                        Session.loginAdmin(userLogged.token, userLogged);\n                        Utils.alertLocalStorage('Usuário logado com sucesso!', true);\n                        history.push('/admin');\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt(\"Entrar\");\n                        Utils.alertLocalStorage(\"Usuário ou senha inválidos\", false);\n                    })\n            }\n            login();\n        }\n    }\n\n    return (\n        <div className={`${styles.div_full}`}>\n\n            <Alert state={props.location.state} />\n\n            <Card body className={`${styles.card_login}`}>\n                <div className={`${styles.div_img_logo} mb-3`}>\n                    <img src={logo} className={`${styles.img_logo} img-fluid center`} alt='logo' />\n                </div>\n\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formEmailLogin\">\n                        <Form.Label className={`${styles.form_label_login}`}>\n                            E-mail\n                        </Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            placeholder=\"Digite seu e-mail ou username\" \n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            className={`${styles.form_control_login}`}\n                        />\n                        <Form.Text className=\"text-danger\">\n                            {usernameError}\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label className={`${styles.form_label_login}`}>\n                            Senha\n                        </Form.Label>\n                        <Form.Control \n                            type={inputPassword} \n                            placeholder=\"Digite sua senha\" \n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            className={`${styles.form_control_login}`}\n                        />\n                        <Form.Text className=\"text-danger\">\n                            {passwordError}\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formCheckbox\" className={`d-flex align-items-start`}>\n                        <Form.Check type=\"checkbox\" label=\"Mostrar senha\" onClick={changeInputPassword} />\n                    </Form.Group>\n\n                    <div className={`text-center mt-3`}>\n                        <button type=\"submit\" className={`${styles.btn_login}`}>\n                            {btnTxt}\n                        </button>\n                    </div>\n                </Form>\n            </Card>\n        </div>\n    )\n}\n\nexport default AdminLogin;","import React, { useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBook, faDollarSign, faGraduationCap, faLocationArrow, faMedal, faPen, faSchool, faShoppingCart, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Alert from \"../components/Alert\";\nimport { Props } from \"../configs/Props\";\nimport { Session } from \"../configs/Session\";\nimport { Utils } from \"../configs/Utils\";\nimport styles from '../styles/adminHome.module.css';\n\nconst AdminHome = (props: Props) => {\n\n    const history = useHistory();\n    \n    useEffect(() => {\n\n        if(!Session.isAuthenticatedAdmin())\n        {\n            Utils.alertLocalStorage('Usuário não logado!', false);\n            history.push('/admin/login');\n        }\n    }, []);\n\n    const handleCardMenu = (url: string) => history.push(url);\n\n    return (\n        <div className={`${styles.div_home}`}>\n\n            <Alert state={props.location.state} />\n\n            <div className={`text-center`}>\n                <h1 className={`${styles.h_home}`}>\n                    PAINEL ADMIN\n                </h1>\n            </div>\n\n            <div className={`row ${styles.div_row_menu}`}>\n                <div className={`col-md-4 d-flex justify-content-center`}>\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/admin/questoes')}>\n                        <Card.Body className={`${styles.card_body_menu}`}>\n                            <FontAwesomeIcon icon={faPen} className={`${styles.icon_menu}`} />\n\n                            <h6 className={`mt-3`}>\n                                Questões\n                            </h6>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className={`col-md-4 d-flex justify-content-center`}>\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/admin/concursos')}>\n                        <Card.Body className={`${styles.card_body_menu}`}>\n                            <FontAwesomeIcon icon={faGraduationCap} className={`${styles.icon_menu}`} />\n                            <h6 className={`mt-3`}>\n                                Concursos\n                            </h6>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className={`col-md-4 d-flex justify-content-center`}>\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/admin/planos')}>\n                        <Card.Body className={`${styles.card_body_menu}`}>\n                            <FontAwesomeIcon icon={faShoppingCart} className={`${styles.icon_menu}`} />\n                            <h6 className={`mt-3`}>\n                                Planos\n                            </h6>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n            <div className={`row ${styles.div_row_menu}`}>\n                <div className={`col-md-4 d-flex justify-content-center`}>\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/admin/usuarios')}>\n                        <Card.Body className={`${styles.card_body_menu}`}>\n                            <FontAwesomeIcon icon={faUser} className={`${styles.icon_menu}`} />\n\n                            <h6 className={`mt-3`}>\n                                Usuários\n                            </h6>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className={`col-md-4 d-flex justify-content-center`}>\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/admin/compras')}>\n                        <Card.Body className={`${styles.card_body_menu}`}>\n                            <FontAwesomeIcon icon={faDollarSign} className={`${styles.icon_menu}`} />\n                            <h6 className={`mt-3`}>\n                                Compras\n                            </h6>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className={`col-md-4 d-flex justify-content-center`}>\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/admin/materias')}>\n                        <Card.Body className={`${styles.card_body_menu}`}>\n                            <FontAwesomeIcon icon={faBook} className={`${styles.icon_menu}`} />\n                            <h6 className={`mt-3`}>\n                                Matérias\n                            </h6>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n            <div className={`row ${styles.div_row_menu}`}>\n                <div className={`col-md-4 d-flex justify-content-center`}>\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/admin/forcas')}>\n                        <Card.Body className={`${styles.card_body_menu}`}>\n                            <FontAwesomeIcon icon={faLocationArrow} className={`${styles.icon_menu}`} />\n\n                            <h6 className={`mt-3`}>\n                                Forças Armadas\n                            </h6>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className={`col-md-4 d-flex justify-content-center`}>\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/admin/patentes')}>\n                        <Card.Body className={`${styles.card_body_menu}`}>\n                            <FontAwesomeIcon icon={faMedal} className={`${styles.icon_menu}`} />\n                            <h6 className={`mt-3`}>\n                                Patentes\n                            </h6>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className={`col-md-4 d-flex justify-content-center`}>\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/admin/escolaridades')}>\n                        <Card.Body className={`${styles.card_body_menu}`}>\n                            <FontAwesomeIcon icon={faSchool} className={`${styles.icon_menu}`} />\n                            <h6 className={`mt-3`}>\n                                Escolaridades\n                            </h6>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminHome;","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport styles from '../styles/headerAdmin.module.css';\nimport logo from '../images/logo.png';\n\nconst HeaderAdmin = () => {\n\n    return (\n        <Navbar className={`${styles.header}`} expand='md' collapseOnSelect>\n            <Navbar.Brand as={Link} to='/admin' className={`${styles.navbar_brand}`}>\n                <img \n                    className={`${styles.img_logo} img-fluid`} \n                    src={logo}\n                    alt='Logo'\n                />\n            </Navbar.Brand>\n\n            <Navbar.Toggle aria-controls=\"navbar-nav\" className={`${styles.nav_toggle}`} />\n\n            <Navbar.Collapse id=\"navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to=\"/admin\" className={`${styles.nav_link}`}>Início</Nav.Link>\n                    <Nav.Link as={Link} to=\"/admin/questoes\" className={`${styles.nav_link}`}>Questões</Nav.Link>\n                    <Nav.Link as={Link} to=\"/admin/planos\" className={`${styles.nav_link}`}>Planos</Nav.Link>\n                    <Nav.Link as={Link} to=\"/admin/compras\" className={`${styles.nav_link}`}>Compras</Nav.Link>\n                    <Nav.Link as={Link} to=\"/admin/usuarios\" className={`${styles.nav_link}`}>Usuários</Nav.Link>\n                </Nav>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link as={Link} to=\"/admin/perfil\" className={`${styles.nav_link}`}>\n                        <FontAwesomeIcon icon={faUser} className={`${styles.nav_icon}`} />\n                    </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default HeaderAdmin;","import { v4 as uuid } from 'uuid';\nimport { Utils } from '../../configs/Utils';\n\nexport abstract class Base {\n\n    id: string = uuid();\n\n    registerDate: Date | string = Utils.formatDatePtBr();\n}","import { Base } from \"./base/Base\";\n\nexport class Scholarity extends Base {\n\n    name: string = '';\n    \n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport { Api } from \"../../configs/Api\";\nimport { AdminScholarityParams } from \"../../configs/Params\";\nimport { Validations } from \"../../configs/Validations\";\nimport { Scholarity } from \"../../models/Scholarity\";\nimport styles from '../../styles/admin.module.css';\n\nconst AdminScholarityTr = ({ scholarity, scholarities, setScholarities } : AdminScholarityParams) => {\n\n    const [displayTr, setDisplayTr] = useState('none');\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n    const [btnDisable, setBtnDisable] = useState(false);\n\n    const [btnTxtDelete, setBtnTxtDelete] = useState<string | object>();\n    const [btnDeleteDisable, setBtnDeleteDisable] = useState(false);\n\n    const api = new Api();\n    \n    useEffect(() => {\n\n        setBtnTxt('Atualizar');\n        setBtnTxtDelete('Excluir');\n        setName(scholarity?.name!);\n    }, []);\n\n    const handleOpenUpdate = () => {\n        setDisplayTr(displayTr === 'none' ? 'table-row' : 'none');\n    }\n\n    const handleUpdate = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnDisable(true);\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n\n        if(nError)\n        {\n            setNameError(nError);\n            setBtnTxt('Atualizar');\n        }\n        else\n        {\n            const update = async () => {\n\n                var model = new Scholarity();\n                model.id = scholarity?.id!;\n                model.name = name;\n\n                await api.updateScholarity(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as Scholarity;\n                        \n                        const newSch = scholarities?.map((s) => {\n\n                            if(s.id === newModel.id)\n                            {\n                                const update = {\n                                    ...s,\n                                    name: newModel.name\n                                }\n                                return update;\n                            }\n                            return s;\n                        });\n\n                        setScholarities!(newSch!);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(res.data.message);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(error.message);\n                    })\n            }\n            update();\n        }\n    }\n\n    const handleDelete = async () => {\n\n        if(window.confirm(`Tem certeza que deseja excluir a escolaridade?`))\n        {\n            setBtnDeleteDisable(true);\n            setBtnTxtDelete(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n            await api.deleteScholarity(scholarity?.id!)\n                .then(res => {\n\n                    var newSch = scholarities?.filter((s) => s !== scholarity);\n                    setScholarities!(newSch!);\n                    alert(res.data.message);\n                })\n                .catch(err => {\n                    console.log(err);\n                    setBtnDeleteDisable(false);\n                    setBtnTxtDelete('Excluir');\n                    alert(err.message);\n                });\n        }\n    }\n\n    return (\n        <tbody>\n            <tr>\n                <td>\n                    {scholarity?.name}\n                </td>\n                <td className={`${styles.td_buttons}`}>\n                    <button \n                        className={`${styles.btn_table_primary}`}\n                        onClick={handleOpenUpdate}\n                    >\n                        {btnTxt}\n                    </button>\n                    <button \n                        className={`${styles.btn_table_secondary} ml-2`}\n                        onClick={handleDelete}\n                        disabled={btnDeleteDisable}\n                    >\n                        {btnTxtDelete}\n                    </button>\n                </td>\n            </tr>\n            <tr style={{ display: displayTr }}>\n                <td colSpan={100}>\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleUpdate}>\n                                <Form.Group controlId=\"formName\">\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Nome\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o nome\" \n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {nameError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <div className={`text-center mt-3`}>\n                                    <button type=\"submit\" className={`${styles.btn_add}`} disabled={btnDisable}>\n                                        {btnTxt}\n                                    </button>\n                                </div>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </td>\n            </tr>\n        </tbody>\n    )\n}\n\nexport default AdminScholarityTr;\n","import React, { useEffect, useState } from 'react';\nimport { Accordion, Card, Form, Spinner, Table } from 'react-bootstrap';\nimport Alert from '../components/Alert';\nimport AdminScholarityTr from '../components/TableRow/AdminScholarityTr';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Utils } from '../configs/Utils';\nimport { Validations } from '../configs/Validations';\nimport { Scholarity } from '../models/Scholarity';\nimport styles from '../styles/admin.module.css';\n\nconst AdminScholarity = (props: Props) => {\n\n    const [scholarities, setScholarities] = useState<Array<Scholarity>>(new Array<Scholarity>());\n    const [isLoading, setIsLoading] = useState(true);\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxt('Adicionar');\n\n        const getScholarity = async () => {\n\n            await api.getScholarity()\n                .then(res => {\n\n                    var scholarity = res as Array<Scholarity>;\n\n                    setScholarities(scholarity);\n                    setIsLoading(false);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getScholarity();\n    }, []);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n\n        if(nError)\n        {\n            setNameError(nError);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            const add = async () => {\n\n                var model = new Scholarity();\n                model.name = name;\n\n                await api.insertScholarity(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as Scholarity;\n                        scholarities.push(newModel);\n                        setScholarities(scholarities);\n\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(res.data.message, true);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(error.message, false);\n                    })\n            }\n            add();\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n            \n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Escolaridades\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <Accordion>\n                    <div className={`${styles.div_buttons}`}>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className={`${styles.btn_menu}`}>\n                            Adicionar\n                        </Accordion.Toggle>\n                    </div>\n                    <div>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card>\n                                <Card.Body>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Group controlId=\"formName\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Nome\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o nome\" \n                                                value={name}\n                                                onChange={(e) => setName(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {nameError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <div className={`text-center mt-3`}>\n                                            <button type=\"submit\" className={`${styles.btn_add}`}>\n                                                {btnTxt}\n                                            </button>\n                                        </div>\n                                    </Form>\n                                </Card.Body>\n                            </Card>\n                        </Accordion.Collapse>\n                    </div>\n                </Accordion>\n            </div>\n            <div>\n\n                {isLoading ?\n                    <div className={`text-center`}>\n                        <Spinner animation=\"grow\" size=\"sm\" className={`color_primary`} />\n                    </div>\n                    :\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        {scholarities.map((s, k) => (\n                            <AdminScholarityTr \n                                scholarities={scholarities}\n                                scholarity={s}\n                                setScholarities={setScholarities}\n                                key={k} \n                            />\n                        ))}\n                    </Table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AdminScholarity;","import { Base } from \"./base/Base\";\n\nexport class ArmedForce extends Base {\n\n    name: string = '';\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport { Api } from \"../../configs/Api\";\nimport { AdminArmedForceParams } from \"../../configs/Params\";\nimport { Validations } from \"../../configs/Validations\";\nimport { ArmedForce } from \"../../models/ArmedForce\";\nimport styles from '../../styles/admin.module.css';\n\nconst AdminArmedForceTr = ({ armedForce, armedForces, setArmedForces } : AdminArmedForceParams) => {\n\n    const [displayTr, setDisplayTr] = useState('none');\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n    const [btnDisable, setBtnDisable] = useState(false);\n\n    const [btnTxtDelete, setBtnTxtDelete] = useState<string | object>();\n    const [btnDeleteDisable, setBtnDeleteDisable] = useState(false);\n\n    const api = new Api();\n    \n    useEffect(() => {\n\n        setBtnTxt('Atualizar');\n        setBtnTxtDelete('Excluir');\n        setName(armedForce?.name!);\n    }, []);\n\n    const handleOpenUpdate = () => {\n        setDisplayTr(displayTr === 'none' ? 'table-row' : 'none');\n    }\n\n    const handleUpdate = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnDisable(true);\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n\n        if(nError)\n        {\n            setNameError(nError);\n            setBtnTxt('Atualizar');\n        }\n        else\n        {\n            const update = async () => {\n\n                var model = new ArmedForce();\n                model.id = armedForce?.id!;\n                model.name = name;\n\n                await api.updateArmedForce(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as ArmedForce;\n                        \n                        const newSch = armedForces?.map((s) => {\n\n                            if(s.id === newModel.id)\n                            {\n                                const update = {\n                                    ...s,\n                                    name: newModel.name\n                                }\n                                return update;\n                            }\n                            return s;\n                        });\n\n                        setArmedForces!(newSch!);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(res.data.message);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(error.message);\n                    })\n            }\n            update();\n        }\n    }\n\n    const handleDelete = async () => {\n\n        if(window.confirm(`Tem certeza que deseja excluir a força armada?`))\n        {\n            setBtnDeleteDisable(true);\n            setBtnTxtDelete(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n            await api.deleteArmedForce(armedForce?.id!)\n                .then(res => {\n\n                    var newSch = armedForces?.filter((s) => s !== armedForce);\n                    setArmedForces!(newSch!);\n                    alert(res.data.message);\n                })\n                .catch(err => {\n                    console.log(err);\n                    setBtnDeleteDisable(false);\n                    setBtnTxtDelete('Excluir');\n                    alert(err.message);\n                });\n        }\n    }\n\n    return (\n        <tbody>\n            <tr>\n                <td>\n                    {armedForce?.name}\n                </td>\n                <td className={`${styles.td_buttons}`}>\n                    <button \n                        className={`${styles.btn_table_primary}`}\n                        onClick={handleOpenUpdate}\n                    >\n                        {btnTxt}\n                    </button>\n                    <button \n                        className={`${styles.btn_table_secondary} ml-2`}\n                        onClick={handleDelete}\n                        disabled={btnDeleteDisable}\n                    >\n                        {btnTxtDelete}\n                    </button>\n                </td>\n            </tr>\n            <tr style={{ display: displayTr }}>\n                <td colSpan={100}>\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleUpdate}>\n                                <Form.Group controlId=\"formName\">\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Nome\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o nome\" \n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {nameError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <div className={`text-center mt-3`}>\n                                    <button type=\"submit\" className={`${styles.btn_add}`} disabled={btnDisable}>\n                                        {btnTxt}\n                                    </button>\n                                </div>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </td>\n            </tr>\n        </tbody>\n    )\n}\n\nexport default AdminArmedForceTr;\n","import React, { useEffect, useState } from 'react';\nimport { Accordion, Card, Form, Spinner, Table } from 'react-bootstrap';\nimport Alert from '../components/Alert';\nimport AdminArmedForceTr from '../components/TableRow/AdminArmedForceTr';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Utils } from '../configs/Utils';\nimport { Validations } from '../configs/Validations';\nimport { ArmedForce } from '../models/ArmedForce';\nimport styles from '../styles/admin.module.css';\n\nconst AdminArmedForce = (props: Props) => {\n\n    const [armedForces, setArmedForces] = useState<Array<ArmedForce>>(new Array<ArmedForce>());\n    const [isLoading, setIsLoading] = useState(true);\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxt('Adicionar');\n\n        const getArmedForce = async () => {\n\n            await api.getArmedForce()\n                .then(res => {\n\n                    var armedForce = res as Array<ArmedForce>;\n\n                    setArmedForces(armedForce);\n                    setIsLoading(false);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getArmedForce();\n    }, []);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n\n        if(nError)\n        {\n            setNameError(nError);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            const add = async () => {\n\n                var model = new ArmedForce();\n                model.name = name;\n\n                await api.insertArmedForce(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as ArmedForce;\n                        armedForces.push(newModel);\n                        setArmedForces(armedForces);\n\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(res.data.message, true);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(error.message, false);\n                    })\n            }\n            add();\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n            \n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Forças Armadas\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <Accordion>\n                    <div className={`${styles.div_buttons}`}>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className={`${styles.btn_menu}`}>\n                            Adicionar\n                        </Accordion.Toggle>\n                    </div>\n                    <div>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card>\n                                <Card.Body>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Group controlId=\"formName\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Nome\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o nome\" \n                                                value={name}\n                                                onChange={(e) => setName(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {nameError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <div className={`text-center mt-3`}>\n                                            <button type=\"submit\" className={`${styles.btn_add}`}>\n                                                {btnTxt}\n                                            </button>\n                                        </div>\n                                    </Form>\n                                </Card.Body>\n                            </Card>\n                        </Accordion.Collapse>\n                    </div>\n                </Accordion>\n            </div>\n            <div>\n\n                {isLoading ?\n                    <div className={`text-center`}>\n                        <Spinner animation=\"grow\" size=\"sm\" className={`color_primary`} />\n                    </div>\n                    :\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        {armedForces.map((s, k) => (\n                            <AdminArmedForceTr \n                                armedForces={armedForces}\n                                armedForce={s}\n                                setArmedForces={setArmedForces}\n                                key={k} \n                            />\n                        ))}\n                    </Table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AdminArmedForce;","import { Base } from \"./base/Base\";\n\nexport class Subject extends Base {\n\n    name: string = '';\n    \n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport { Api } from \"../../configs/Api\";\nimport { AdminSubjectParams } from \"../../configs/Params\";\nimport { Validations } from \"../../configs/Validations\";\nimport { Subject } from \"../../models/Subject\";\nimport styles from '../../styles/admin.module.css';\n\nconst AdminSubjectTr = ({ subject, subjects, setSubjects } : AdminSubjectParams) => {\n\n    const [displayTr, setDisplayTr] = useState('none');\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n    const [btnDisable, setBtnDisable] = useState(false);\n\n    const [btnTxtDelete, setBtnTxtDelete] = useState<string | object>();\n    const [btnDeleteDisable, setBtnDeleteDisable] = useState(false);\n\n    const api = new Api();\n    \n    useEffect(() => {\n\n        setBtnTxt('Atualizar');\n        setBtnTxtDelete('Excluir');\n        setName(subject?.name!);\n    }, []);\n\n    const handleOpenUpdate = () => {\n        setDisplayTr(displayTr === 'none' ? 'table-row' : 'none');\n    }\n\n    const handleUpdate = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnDisable(true);\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n\n        if(nError)\n        {\n            setNameError(nError);\n            setBtnTxt('Atualizar');\n        }\n        else\n        {\n            const update = async () => {\n\n                var model = new Subject();\n                model.id = subject?.id!;\n                model.name = name;\n\n                await api.updateSubject(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as Subject;\n                        \n                        const newSch = subjects?.map((s) => {\n\n                            if(s.id === newModel.id)\n                            {\n                                const update = {\n                                    ...s,\n                                    name: newModel.name\n                                }\n                                return update;\n                            }\n                            return s;\n                        });\n\n                        setSubjects!(newSch!);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(res.data.message);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(error.message);\n                    })\n            }\n            update();\n        }\n    }\n\n    const handleDelete = async () => {\n\n        if(window.confirm(`Tem certeza que deseja excluir a matéria?`))\n        {\n            setBtnDeleteDisable(true);\n            setBtnTxtDelete(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n            await api.deleteSubject(subject?.id!)\n                .then(res => {\n\n                    var newSch = subjects?.filter((s) => s !== subject);\n                    setSubjects!(newSch!);\n                    alert(res.data.message);\n                })\n                .catch(err => {\n                    console.log(err);\n                    setBtnDeleteDisable(false);\n                    setBtnTxtDelete('Excluir');\n                    alert(err.message);\n                });\n        }\n    }\n\n    return (\n        <tbody>\n            <tr>\n                <td>\n                    {subject?.name}\n                </td>\n                <td className={`${styles.td_buttons}`}>\n                    <button \n                        className={`${styles.btn_table_primary}`}\n                        onClick={handleOpenUpdate}\n                    >\n                        {btnTxt}\n                    </button>\n                    <button \n                        className={`${styles.btn_table_secondary} ml-2`}\n                        onClick={handleDelete}\n                        disabled={btnDeleteDisable}\n                    >\n                        {btnTxtDelete}\n                    </button>\n                </td>\n            </tr>\n            <tr style={{ display: displayTr }}>\n                <td colSpan={100}>\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleUpdate}>\n                                <Form.Group controlId=\"formName\">\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Nome\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o nome\" \n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {nameError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <div className={`text-center mt-3`}>\n                                    <button type=\"submit\" className={`${styles.btn_add}`} disabled={btnDisable}>\n                                        {btnTxt}\n                                    </button>\n                                </div>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </td>\n            </tr>\n        </tbody>\n    )\n}\n\nexport default AdminSubjectTr;\n","import React, { useEffect, useState } from 'react';\nimport { Accordion, Card, Form, Spinner, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Alert from '../components/Alert';\nimport AdminSubjectTr from '../components/TableRow/AdminSubjectTr';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Utils } from '../configs/Utils';\nimport { Validations } from '../configs/Validations';\nimport { Subject } from '../models/Subject';\nimport styles from '../styles/admin.module.css';\n\nconst AdminSubject = (props: Props) => {\n\n    const [subjects, setSubjects] = useState<Array<Subject>>(new Array<Subject>());\n    const [isLoading, setIsLoading] = useState(true);\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxt('Adicionar');\n\n        const getSubject = async () => {\n\n            await api.getSubject()\n                .then(res => {\n\n                    var subject = res as Array<Subject>;\n\n                    setSubjects(subject);\n                    setIsLoading(false);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getSubject();\n    }, []);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n\n        if(nError)\n        {\n            setNameError(nError);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            const add = async () => {\n\n                var model = new Subject();\n                model.name = name;\n\n                await api.insertSubject(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as Subject;\n                        subjects.push(newModel);\n                        setSubjects(subjects);\n\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(res.data.message, true);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(error.message, false);\n                    })\n            }\n            add();\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n            \n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Matérias\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <Accordion>\n                    <div className={`${styles.div_buttons}`}>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className={`${styles.btn_menu}`}>\n                            Adicionar\n                        </Accordion.Toggle>\n                        <Link to='/admin/assuntos' className={`${styles.btn_menu} ml-2`}>\n                            Assuntos\n                        </Link>\n                    </div>\n                    <div>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card>\n                                <Card.Body>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Group controlId=\"formName\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Nome\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o nome\" \n                                                value={name}\n                                                onChange={(e) => setName(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {nameError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <div className={`text-center mt-3`}>\n                                            <button type=\"submit\" className={`${styles.btn_add}`}>\n                                                {btnTxt}\n                                            </button>\n                                        </div>\n                                    </Form>\n                                </Card.Body>\n                            </Card>\n                        </Accordion.Collapse>\n                    </div>\n                </Accordion>\n            </div>\n            <div>\n                {isLoading ?\n                    <div className={`text-center`}>\n                        <Spinner animation=\"grow\" size=\"sm\" className={`color_primary`} />\n                    </div>\n                    :\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        {subjects.map((s, k) => (\n                            <AdminSubjectTr \n                                subjects={subjects}\n                                subject={s}\n                                setSubjects={setSubjects}\n                                key={k} \n                            />\n                        ))}\n                    </Table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AdminSubject;","import { Base } from \"./base/Base\";\nimport { v4 as uuid } from 'uuid';\nimport { Subject } from \"./Subject\";\n\nexport class SubjectMatter extends Base {\n\n    name: string = '';\n\n    subjectId: string = uuid();\n    \n    subject: Subject | null = null;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport Select, { ValueType } from 'react-select';\nimport { Api } from \"../../configs/Api\";\nimport { AdminSubjectMatterParams } from \"../../configs/Params\";\nimport { Validations } from \"../../configs/Validations\";\nimport { SelectModel } from '../../models/SelectModel';\nimport { Subject } from \"../../models/Subject\";\nimport { SubjectMatter } from \"../../models/SubjectMatter\";\nimport styles from '../../styles/admin.module.css';\n\nconst AdminSubjectMatterTr = ({ subjectMatter, subjectMatters, setSubjectMatters, optionSubjectSelect } : AdminSubjectMatterParams) => {\n\n    const [displayTr, setDisplayTr] = useState('none');\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n\n    const [subjectSelect, setSubjectSelect] = useState<SelectModel | null>();\n    const [subjectError, setSubjectError] = useState('');\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n    const [btnDisable, setBtnDisable] = useState(false);\n\n    const [btnTxtDelete, setBtnTxtDelete] = useState<string | object>();\n    const [btnDeleteDisable, setBtnDeleteDisable] = useState(false);\n\n    const api = new Api();\n    \n    useEffect(() => {\n\n        setBtnTxt('Atualizar');\n        setBtnTxtDelete('Excluir');\n        setName(subjectMatter?.name!);\n        setSubjectSelect(optionSubjectSelect.find(x => x.value === subjectMatter?.subjectId));\n    }, []);\n\n    const handleOpenUpdate = () => {\n        setDisplayTr(displayTr === 'none' ? 'table-row' : 'none');\n    }\n\n    const handleSubjectSelect = (event: ValueType<SelectModel, false>) => setSubjectSelect(event);\n\n    const handleUpdate = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnDisable(true);\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n        var sError = Validations.validateRequiredField(subjectSelect?.value, 'matéria');\n\n        if(nError || sError)\n        {\n            setNameError(nError);\n            setSubjectError(sError);\n            setBtnTxt('Atualizar');\n        }\n        else\n        {\n            const update = async () => {\n\n                var model = new SubjectMatter();\n                model.id = subjectMatter?.id!;\n                model.name = name;\n                model.subjectId = subjectSelect?.value!;\n\n                await api.updateSubjectMatter(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as SubjectMatter;\n                        \n                        const newSch = subjectMatters?.map((s) => {\n\n                            if(s.id === newModel.id)\n                            {\n                                var subject = new Subject();\n                                subject.id = newModel.subjectId;\n                                subject.name = subjectSelect?.label!;\n\n                                const update = {\n                                    ...s,\n                                    name: newModel.name,\n                                    subjectId: newModel.subjectId,\n                                    subject: subject,\n                                }\n                                return update;\n                            }\n                            return s;\n                        });\n\n                        setSubjectMatters!(newSch!);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(res.data.message);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(error.message);\n                    })\n            }\n            update();\n        }\n    }\n\n    const handleDelete = async () => {\n\n        if(window.confirm(`Tem certeza que deseja excluir a matéria?`))\n        {\n            setBtnDeleteDisable(true);\n            setBtnTxtDelete(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n            await api.deleteSubjectMatter(subjectMatter?.id!)\n                .then(res => {\n\n                    var newSch = subjectMatters?.filter((s) => s !== subjectMatter);\n                    setSubjectMatters!(newSch!);\n                    alert(res.data.message);\n                })\n                .catch(err => {\n                    console.log(err);\n                    setBtnDeleteDisable(false);\n                    setBtnTxtDelete('Excluir');\n                    alert(err.message);\n                });\n        }\n    }\n\n    return (\n        <tbody>\n            <tr>\n                <td>\n                    {subjectMatter?.name}\n                </td>\n                <td>\n                    {subjectMatter?.subject?.name}\n                </td>\n                <td className={`${styles.td_buttons}`}>\n                    <button \n                        className={`${styles.btn_table_primary}`}\n                        onClick={handleOpenUpdate}\n                    >\n                        {btnTxt}\n                    </button>\n                    <button \n                        className={`${styles.btn_table_secondary} ml-2`}\n                        onClick={handleDelete}\n                        disabled={btnDeleteDisable}\n                    >\n                        {btnTxtDelete}\n                    </button>\n                </td>\n            </tr>\n            <tr style={{ display: displayTr }}>\n                <td colSpan={100}>\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleUpdate}>\n                                <Form.Group controlId=\"formName\">\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Nome\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o nome\" \n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {nameError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label>Selecione a matéria:</Form.Label>\n                                    <Select \n                                        value={subjectSelect} \n                                        onChange={(e: ValueType<SelectModel, false>) => handleSubjectSelect(e)}\n                                        options={optionSubjectSelect} \n                                        placeholder='Selecione a matéria' \n                                        menuPlacement='bottom'\n                                        menuPosition='fixed'\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {subjectError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <div className={`text-center mt-3`}>\n                                    <button \n                                        type=\"submit\" \n                                        className={`${styles.btn_add}`}\n                                        disabled={btnDisable}\n                                    >\n                                        {btnTxt}\n                                    </button>\n                                </div>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </td>\n            </tr>\n        </tbody>\n    )\n}\n\nexport default AdminSubjectMatterTr;\n","\nexport class SelectModel {\n\n    constructor(value?: string, label?: string)\n    {\n        this.value = value || '';\n        this.label = label || '';\n    }\n    \n    value: string = '';\n    label: string = '';\n}","import React, { useEffect, useState } from 'react';\nimport { Accordion, Card, Form, Spinner, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Select, { ValueType } from 'react-select';\nimport Alert from '../components/Alert';\nimport AdminSubjectMatterTr from '../components/TableRow/AdminSubjectMatterTr';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Utils } from '../configs/Utils';\nimport { Validations } from '../configs/Validations';\nimport { SelectModel } from '../models/SelectModel';\nimport { Subject } from '../models/Subject';\nimport { SubjectMatter } from '../models/SubjectMatter';\nimport styles from '../styles/admin.module.css';\n\nconst AdminSubjectMatter = (props: Props) => {\n\n    const [subjectMatters, setSubjectMatters] = useState<Array<SubjectMatter>>(new Array<SubjectMatter>());\n    const [isLoading, setIsLoading] = useState(true);\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n    \n    const [subjectSelect, setSubjectSelect] = useState<SelectModel | null>();\n    const [optionSubjectSelect, setOptionSubjectSelect] = useState<SelectModel[]>(new Array<SelectModel>());\n    const [subjectError, setSubjectError] = useState('');\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxt('Adicionar');\n\n        const getSubjectMatter = async () => {\n\n            await api.getSubjectMatter()\n                .then(res => {\n\n                    var subjectMatter = res as Array<SubjectMatter>;\n\n                    setSubjectMatters(subjectMatter);\n                    setIsLoading(false);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getSubjectMatter();\n\n        const getSubject = async () => {\n\n            await api.getSubject()\n                .then(res => {\n\n                    var subjects = res as Array<Subject>;\n\n                    var opSelect = new Array<SelectModel>();\n\n                    subjects.forEach(g => {\n                        var cSel = new SelectModel();\n                        cSel.label = g.name;\n                        cSel.value = g.id;\n                        opSelect.push(cSel);\n                    });\n\n                    setOptionSubjectSelect(opSelect);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getSubject();\n        \n    }, []);\n\n    const handleSubjectSelect = (event: ValueType<SelectModel, false>) => setSubjectSelect(event);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n        var sError = Validations.validateRequiredField(subjectSelect?.value, 'matéria');\n\n        if(nError || sError)\n        {\n            setNameError(nError);\n            setSubjectError(sError);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            const add = async () => {\n\n                var model = new SubjectMatter();\n                model.name = name;\n                model.subjectId = subjectSelect?.value!;\n\n                await api.insertSubjectMatter(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as SubjectMatter;\n                        subjectMatters.push(newModel);\n                        setSubjectMatters(subjectMatters);\n\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(res.data.message, true);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(error.message, false);\n                    })\n            }\n            add();\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n            \n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Assuntos\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <Accordion>\n                    <div className={`${styles.div_buttons}`}>\n                        <Link to='/admin/materias' className={`${styles.btn_menu}`}>\n                            Voltar\n                        </Link>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className={`${styles.btn_menu} ml-2`}>\n                            Adicionar\n                        </Accordion.Toggle>\n                    </div>\n                    <div>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card>\n                                <Card.Body>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Group controlId=\"formName\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Nome\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o nome\" \n                                                value={name}\n                                                onChange={(e) => setName(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {nameError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label>Selecione a matéria:</Form.Label>\n                                            <Select \n                                                value={subjectSelect} \n                                                onChange={(e: ValueType<SelectModel, false>) => handleSubjectSelect(e)}\n                                                options={optionSubjectSelect} \n                                                placeholder='Selecione a matéria' \n                                                menuPlacement='bottom'\n                                                menuPosition='fixed'\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {subjectError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <div className={`text-center mt-3`}>\n                                            <button type=\"submit\" className={`${styles.btn_add}`}>\n                                                {btnTxt}\n                                            </button>\n                                        </div>\n                                    </Form>\n                                </Card.Body>\n                            </Card>\n                        </Accordion.Collapse>\n                    </div>\n                </Accordion>\n            </div>\n            <div>\n\n                {isLoading ?\n                    <div className={`text-center`}>\n                        <Spinner animation=\"grow\" size=\"sm\" className={`color_primary`} />\n                    </div>\n                    :\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Matéria</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        {subjectMatters.map((s, k) => (\n                            <AdminSubjectMatterTr \n                                subjectMatters={subjectMatters}\n                                subjectMatter={s}\n                                setSubjectMatters={setSubjectMatters}\n                                optionSubjectSelect={optionSubjectSelect}\n                                key={k} \n                            />\n                        ))}\n                    </Table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AdminSubjectMatter;","import { Base } from \"./base/Base\";\n\nexport class Patent extends Base {\n\n    name: string = '';\n    \n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport { Api } from \"../../configs/Api\";\nimport { AdminPatentParams } from \"../../configs/Params\";\nimport { Validations } from \"../../configs/Validations\";\nimport { Patent } from \"../../models/Patent\";\nimport styles from '../../styles/admin.module.css';\n\nconst AdminPatentTr = ({ patent, patents, setPatents } : AdminPatentParams) => {\n\n    const [displayTr, setDisplayTr] = useState('none');\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n    const [btnDisable, setBtnDisable] = useState(false);\n\n    const [btnTxtDelete, setBtnTxtDelete] = useState<string | object>();\n    const [btnDeleteDisable, setBtnDeleteDisable] = useState(false);\n\n    const api = new Api();\n    \n    useEffect(() => {\n\n        setBtnTxt('Atualizar');\n        setBtnTxtDelete('Excluir');\n        setName(patent?.name!);\n    }, []);\n\n    const handleOpenUpdate = () => {\n        setDisplayTr(displayTr === 'none' ? 'table-row' : 'none');\n    }\n\n    const handleUpdate = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnDisable(true);\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n\n        if(nError)\n        {\n            setNameError(nError);\n            setBtnTxt('Atualizar');\n        }\n        else\n        {\n            const update = async () => {\n\n                var model = new Patent();\n                model.id = patent?.id!;\n                model.name = name;\n\n                await api.updatePatent(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as Patent;\n                        \n                        const newSch = patents?.map((s) => {\n\n                            if(s.id === newModel.id)\n                            {\n                                const update = {\n                                    ...s,\n                                    name: newModel.name\n                                }\n                                return update;\n                            }\n                            return s;\n                        });\n\n                        setPatents!(newSch!);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(res.data.message);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(error.message);\n                    })\n            }\n            update();\n        }\n    }\n\n    const handleDelete = async () => {\n\n        if(window.confirm(`Tem certeza que deseja excluir a patente?`))\n        {\n            setBtnDeleteDisable(true);\n            setBtnTxtDelete(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n            await api.deletePatent(patent?.id!)\n                .then(res => {\n\n                    var newSch = patents?.filter((s) => s !== patent);\n                    setPatents!(newSch!);\n                    alert(res.data.message);\n                })\n                .catch(err => {\n                    console.log(err);\n                    setBtnDeleteDisable(false);\n                    setBtnTxtDelete('Excluir');\n                    alert(err.message);\n                });\n        }\n    }\n\n    return (\n        <tbody>\n            <tr>\n                <td>\n                    {patent?.name}\n                </td>\n                <td className={`${styles.td_buttons}`}>\n                    <button \n                        className={`${styles.btn_table_primary}`}\n                        onClick={handleOpenUpdate}\n                    >\n                        {btnTxt}\n                    </button>\n                    <button \n                        className={`${styles.btn_table_secondary} ml-2`}\n                        onClick={handleDelete}\n                        disabled={btnDeleteDisable}\n                    >\n                        {btnTxtDelete}\n                    </button>\n                </td>\n            </tr>\n            <tr style={{ display: displayTr }}>\n                <td colSpan={100}>\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleUpdate}>\n                                <Form.Group controlId=\"formName\">\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Nome\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o nome\" \n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {nameError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <div className={`text-center mt-3`}>\n                                    <button type=\"submit\" className={`${styles.btn_add}`} disabled={btnDisable}>\n                                        {btnTxt}\n                                    </button>\n                                </div>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </td>\n            </tr>\n        </tbody>\n    )\n}\n\nexport default AdminPatentTr;\n","import React, { useEffect, useState } from 'react';\nimport { Accordion, Card, Form, Spinner, Table } from 'react-bootstrap';\nimport Alert from '../components/Alert';\nimport AdminPatentTr from '../components/TableRow/AdminPatentTr';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Utils } from '../configs/Utils';\nimport { Validations } from '../configs/Validations';\nimport { Patent } from '../models/Patent';\nimport styles from '../styles/admin.module.css';\n\nconst AdminPatent = (props: Props) => {\n\n    const [patents, setPatents] = useState<Array<Patent>>(new Array<Patent>());\n    const [isLoading, setIsLoading] = useState(true);\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxt('Adicionar');\n\n        const getPatent = async () => {\n\n            await api.getPatent()\n                .then(res => {\n\n                    var patent = res as Array<Patent>;\n\n                    setPatents(patent);\n                    setIsLoading(false);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getPatent();\n    }, []);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n\n        if(nError)\n        {\n            setNameError(nError);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            const add = async () => {\n\n                var model = new Patent();\n                model.name = name;\n\n                await api.insertPatent(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as Patent;\n                        patents.push(newModel);\n                        setPatents(patents);\n\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(res.data.message, true);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(error.message, false);\n                    })\n            }\n            add();\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n            \n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Patentes\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <Accordion>\n                    <div className={`${styles.div_buttons}`}>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className={`${styles.btn_menu}`}>\n                            Adicionar\n                        </Accordion.Toggle>\n                    </div>\n                    <div>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card>\n                                <Card.Body>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Group controlId=\"formName\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Nome\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o nome\" \n                                                value={name}\n                                                onChange={(e) => setName(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {nameError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <div className={`text-center mt-3`}>\n                                            <button type=\"submit\" className={`${styles.btn_add}`}>\n                                                {btnTxt}\n                                            </button>\n                                        </div>\n                                    </Form>\n                                </Card.Body>\n                            </Card>\n                        </Accordion.Collapse>\n                    </div>\n                </Accordion>\n            </div>\n            <div>\n\n                {isLoading ?\n                    <div className={`text-center`}>\n                        <Spinner animation=\"grow\" size=\"sm\" className={`color_primary`} />\n                    </div>\n                    :\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        {patents.map((s, k) => (\n                            <AdminPatentTr \n                                patents={patents}\n                                patent={s}\n                                setPatents={setPatents}\n                                key={k} \n                            />\n                        ))}\n                    </Table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AdminPatent;","import { Base } from \"./base/Base\";\nimport { v4 as uuid } from 'uuid';\nimport { ArmedForce } from \"./ArmedForce\";\nimport { Patent } from \"./Patent\";\nimport { Scholarity } from \"./Scholarity\";\n\nexport class Contest extends Base {\n\n    name: string = '';\n    \n    year: number = 0;\n\n    armedForceId: string = uuid();\n    \n    armedForce: ArmedForce | null = null;\n    \n    patentId: string = uuid();\n    \n    patent: Patent | null = null;\n\n    salary: number | undefined;\n\n    questionsLength: number | undefined;\n\n    questionDescription: string | undefined;\n\n    registration: string | undefined;\n\n    testDate: Date | string | undefined;\n\n    vacancies: number | undefined;\n\n    vacanciesDescription: string | undefined;\n\n    requirements: string | undefined;\n\n    scholarityId: string = uuid();\n\n    scholarity: Scholarity | null = null;\n\n    areas: string | undefined;\n\n    locations: string | undefined;\n\n    duration: string | undefined;\n\n    site: string | undefined;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport Select, { ValueType } from 'react-select';\nimport { Api } from \"../../configs/Api\";\nimport { AdminContestParams } from \"../../configs/Params\";\nimport { Utils } from \"../../configs/Utils\";\nimport { Validations } from \"../../configs/Validations\";\nimport { Contest } from \"../../models/Contest\";\nimport { SelectModel } from \"../../models/SelectModel\";\nimport styles from '../../styles/admin.module.css';\n\nconst AdminContestTr = ({ \n        contest, contests, setContests, optionArmedForceSelect, optionPatentSelect, optionScholaritySelect \n    } : AdminContestParams) => {\n\n    //#region fields\n    \n    const [btnTxt, setBtnTxt] = useState<string | object>();\n    const [btnDisable, setBtnDisable] = useState(false);\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n\n    const [year, setYear] = useState(0);\n    const [yearError, setYearError] = useState('');\n\n    const [armedForceSelect, setArmedForceSelect] = useState<SelectModel | null>();\n    const [armedForceError, setArmedForceError] = useState('');\n    \n    const [patentSelect, setPatentSelect] = useState<SelectModel | null>();\n    const [patentError, setPatentError] = useState('');\n    \n    const [scholaritySelect, setScholaritySelect] = useState<SelectModel | null>();\n    const [scholarityError, setScholarityError] = useState('');\n\n    const [salary, setSalary] = useState<number>();\n    const [questionsLength, setQuestionsLength] = useState<number>();\n    const [questionDescription, setQuestionDescription] = useState<string>();\n    const [vacancies, setVacancies] = useState<number>();\n    const [vacanciesDescription, setVacanciesDescription] = useState<string>();\n    const [testDate, setTestDate] = useState<string | Date>();\n    const [requirements, setRequirements] = useState<string>();\n    const [registration, setRegistration] = useState<string>();\n    const [areas, setAreas] = useState<string>();\n    const [locations, setLocations] = useState<string>();\n    const [duration, setDuration] = useState<string>();\n    const [site, setSite] = useState<string>();\n\n    //#endregion\n\n    const [displayTr, setDisplayTr] = useState('none');\n\n    const [btnTxtDelete, setBtnTxtDelete] = useState<string | object>();\n    const [btnDeleteDisable, setBtnDeleteDisable] = useState(false);\n\n    const api = new Api();\n    \n    useEffect(() => {\n\n        setBtnTxt('Atualizar');\n        setBtnTxtDelete('Excluir');\n        \n        setName(contest?.name!);\n        setYear(contest?.year!);\n        setArmedForceSelect(optionArmedForceSelect.find(x => x.value === contest?.armedForceId));\n        setPatentSelect(optionPatentSelect.find(x => x.value === contest?.patentId));\n        setScholaritySelect(optionScholaritySelect.find(x => x.value === contest?.scholarityId));\n        setSalary(contest?.salary);\n        setQuestionsLength(contest?.questionsLength);\n        setQuestionDescription(contest?.questionDescription);\n        setVacancies(contest?.vacancies);\n        setVacanciesDescription(contest?.vacanciesDescription);\n        setTestDate(contest?.testDate);\n        setRequirements(contest?.requirements);\n        setRegistration(contest?.registration);\n        setAreas(contest?.areas);\n        setLocations(contest?.locations);\n        setDuration(contest?.duration);\n        setSite(contest?.site);\n    }, []);\n\n    const handleArmedForceSelect = (event: ValueType<SelectModel, false>) => setArmedForceSelect(event);\n    const handlePatentSelect = (event: ValueType<SelectModel, false>) => setPatentSelect(event);\n    const handleScholaritySelect = (event: ValueType<SelectModel, false>) => setScholaritySelect(event);\n\n    const handleOpenUpdate = () => {\n        setDisplayTr(displayTr === 'none' ? 'table-row' : 'none');\n    }\n\n    const handleUpdate = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnDisable(true);\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n        var yError = Validations.validateRequiredField(year?.toString(), 'ano');\n        var aFError = Validations.validateRequiredField(armedForceSelect?.value, 'força armada');\n        var pError = Validations.validateRequiredField(patentSelect?.value, 'patente');\n        var sError = Validations.validateRequiredField(scholaritySelect?.value, 'escolaridade');\n\n        if(nError || yError || aFError || pError || sError)\n        {\n            setNameError(nError);\n            setYearError(yError);\n            setArmedForceError(aFError);\n            setPatentError(pError);\n            setScholarityError(sError);\n            setBtnTxt('Atualizar');\n        }\n        else\n        {\n            const update = async () => {\n\n                var model = new Contest();\n                model.id = contest?.id!;\n                model.name = name;\n                model.year = year;\n                model.armedForceId = armedForceSelect?.value!;\n                model.patentId = patentSelect?.value!;\n                model.scholarityId = scholaritySelect?.value!;\n                model.salary = salary;\n                model.questionsLength = questionsLength;\n                model.questionDescription = questionDescription;\n                model.vacancies = vacancies;\n                model.vacanciesDescription = vacanciesDescription;\n                model.testDate = testDate;\n                model.requirements = requirements;\n                model.areas = areas;\n                model.locations = locations;\n                model.duration = duration;\n                model.site = site;\n\n                await api.updateContest(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as Contest;\n                        \n                        const newSch = contests?.map((s) => {\n\n                            if(s.id === newModel.id)\n                            {\n                                const update = {\n                                    ...s,\n                                    name: newModel.name\n                                }\n                                return update;\n                            }\n                            return s;\n                        });\n\n                        setContests!(newSch!);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(res.data.message);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(error.message);\n                    })\n            }\n            update();\n        }\n    }\n\n    const handleDelete = async () => {\n\n        if(window.confirm(`Tem certeza que deseja excluir o concurso?`))\n        {\n            setBtnDeleteDisable(true);\n            setBtnTxtDelete(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n            await api.deleteContest(contest?.id!)\n                .then(res => {\n\n                    var newSch = contests?.filter((s) => s !== contest);\n                    setContests!(newSch!);\n                    alert(res.data.message);\n                })\n                .catch(err => {\n                    console.log(err);\n                    setBtnDeleteDisable(false);\n                    setBtnTxtDelete('Excluir');\n                    alert(err.message);\n                });\n        }\n    }\n\n    return (\n        <tbody>\n            <tr>\n                <td>\n                    {contest?.name}\n                </td>\n                <td>\n                    {contest?.year}\n                </td>\n                <td>\n                    {contest?.armedForce?.name}\n                </td>\n                <td>\n                    {contest?.patent?.name}\n                </td>\n                <td>\n                    {contest?.scholarity?.name}\n                </td>\n                <td className={`${styles.td_buttons}`}>\n                    <button \n                        className={`${styles.btn_table_primary}`}\n                        onClick={handleOpenUpdate}\n                    >\n                        {btnTxt}\n                    </button>\n                    <button \n                        className={`${styles.btn_table_secondary} ml-2`}\n                        onClick={handleDelete}\n                        disabled={btnDeleteDisable}\n                    >\n                        {btnTxtDelete}\n                    </button>\n                </td>\n            </tr>\n            <tr style={{ display: displayTr }}>\n                <td colSpan={100}>\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleUpdate}>\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label} ${styles.form_label_required}`}>\n                                        Nome\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o nome\" \n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {nameError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label} ${styles.form_label_required}`}>\n                                        Ano\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o ano\" \n                                        value={year}\n                                        onChange={(e) => setYear(+Utils.onlyNumberMask(e.target.value))}\n                                        className={`${styles.form_control}`}\n                                        min={1900}\n                                        max={9999}\n                                        minLength={4}\n                                        maxLength={4}\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {yearError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label_required}`}>\n                                        Força armada\n                                    </Form.Label>\n                                    <Select \n                                        value={armedForceSelect} \n                                        onChange={(e: ValueType<SelectModel, false>) => handleArmedForceSelect(e)}\n                                        options={optionArmedForceSelect} \n                                        placeholder='Selecione a força armada' \n                                        menuPlacement='bottom'\n                                        menuPosition='fixed'\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {armedForceError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label_required}`}>\n                                        Patente\n                                    </Form.Label>\n                                    <Select \n                                        value={patentSelect} \n                                        onChange={(e: ValueType<SelectModel, false>) => handlePatentSelect(e)}\n                                        options={optionPatentSelect} \n                                        placeholder='Selecione a patente' \n                                        menuPlacement='bottom'\n                                        menuPosition='fixed'\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {patentError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label_required}`}>\n                                        Escolaridade\n                                    </Form.Label>\n                                    <Select \n                                        value={scholaritySelect} \n                                        onChange={(e: ValueType<SelectModel, false>) => handleScholaritySelect(e)}\n                                        options={optionScholaritySelect} \n                                        placeholder='Selecione a escolaridade' \n                                        menuPlacement='bottom'\n                                        menuPosition='fixed'\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {scholarityError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Salário\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"number\" \n                                        placeholder=\"Digite o ano\" \n                                        value={salary}\n                                        onChange={(e) => setSalary(+e.target.value)}\n                                        className={`${styles.form_control}`}\n                                        step={'any'}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Questões\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o número de questões\" \n                                        value={questionsLength}\n                                        onChange={(e) => setQuestionsLength(+Utils.onlyNumberMask(e.target.value))}\n                                        className={`${styles.form_control}`}\n                                        min={0}\n                                        max={9999}\n                                    />\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite a descrição das questões\" \n                                        value={questionDescription}\n                                        onChange={(e) => setQuestionDescription(e.target.value)}\n                                        className={`${styles.form_control} mt-2`}\n                                        as=\"textarea\" \n                                        rows={3}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formName\">\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Vagas\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o número de vagas\" \n                                        value={vacancies}\n                                        onChange={(e) => setVacancies(+Utils.onlyNumberMask(e.target.value))}\n                                        className={`${styles.form_control}`}\n                                        min={0}\n                                        max={9999999}\n                                    />\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite a descrição das vagas\" \n                                        value={vacanciesDescription}\n                                        onChange={(e) => setVacanciesDescription(e.target.value)}\n                                        className={`${styles.form_control} mt-2`}\n                                        as=\"textarea\" \n                                        rows={3}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Data da prova\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"date\" \n                                        placeholder=\"Digite a data da prova\" \n                                        value={Utils.formatDate(testDate?.toString())}\n                                        onChange={(e) => setTestDate(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Requisitos\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite os requisitos\" \n                                        value={requirements}\n                                        onChange={(e) => setRequirements(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                        as=\"textarea\" \n                                        rows={3}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Inscrições\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite as inscrições\" \n                                        value={registration}\n                                        onChange={(e) => setRegistration(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                        as=\"textarea\" \n                                        rows={3}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Áreas\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite as áreas de especialização\" \n                                        value={areas}\n                                        onChange={(e) => setAreas(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                        as=\"textarea\" \n                                        rows={3}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Local\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o local do internato\" \n                                        value={locations}\n                                        onChange={(e) => setLocations(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                        as=\"textarea\" \n                                        rows={3}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Duração\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite a duração do internato\" \n                                        value={duration}\n                                        onChange={(e) => setDuration(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Site\n                                    </Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Digite o site\" \n                                        value={site}\n                                        onChange={(e) => setSite(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                    />\n                                </Form.Group>\n\n                                <div className={`text-center mt-3`}>\n                                    <button type=\"submit\" className={`${styles.btn_add}`} disabled={btnDisable}>\n                                        {btnTxt}\n                                    </button>\n                                </div>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </td>\n            </tr>\n        </tbody>\n    )\n}\n\nexport default AdminContestTr;\n","import React, { useEffect, useState } from 'react';\nimport { Accordion, Card, Form, Spinner, Table } from 'react-bootstrap';\nimport Select, { ValueType } from 'react-select';\nimport Alert from '../components/Alert';\nimport AdminContestTr from '../components/TableRow/AdminContestTr';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Utils } from '../configs/Utils';\nimport { Validations } from '../configs/Validations';\nimport { ArmedForce } from '../models/ArmedForce';\nimport { Contest } from '../models/Contest';\nimport { Patent } from '../models/Patent';\nimport { Scholarity } from '../models/Scholarity';\nimport { SelectModel } from '../models/SelectModel';\nimport styles from '../styles/admin.module.css';\n\nconst AdminContest = (props: Props) => {\n\n    //#region fields\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const [name, setName] = useState('');\n    const [nameError, setNameError] = useState('');\n\n    const [year, setYear] = useState(0);\n    const [yearError, setYearError] = useState('');\n\n    const [armedForceSelect, setArmedForceSelect] = useState<SelectModel | null>();\n    const [optionArmedForceSelect, setOptionArmedForceSelect] = useState<SelectModel[]>(new Array<SelectModel>());\n    const [armedForceError, setArmedForceError] = useState('');\n    \n    const [patentSelect, setPatentSelect] = useState<SelectModel | null>();\n    const [optionPatentSelect, setOptionPatentSelect] = useState<SelectModel[]>(new Array<SelectModel>());\n    const [patentError, setPatentError] = useState('');\n    \n    const [scholaritySelect, setScholaritySelect] = useState<SelectModel | null>();\n    const [optionScholaritySelect, setOptionScholaritySelect] = useState<SelectModel[]>(new Array<SelectModel>());\n    const [scholarityError, setScholarityError] = useState('');\n\n    const [salary, setSalary] = useState(0.00);\n    const [questionsLength, setQuestionsLength] = useState(0);\n    const [questionDescription, setQuestionDescription] = useState('');\n    const [vacancies, setVacancies] = useState(0);\n    const [vacanciesDescription, setVacanciesDescription] = useState('');\n    const [testDate, setTestDate] = useState('');\n    const [requirements, setRequirements] = useState('');\n    const [registration, setRegistration] = useState('');\n    const [areas, setAreas] = useState('');\n    const [locations, setLocations] = useState('');\n    const [duration, setDuration] = useState('');\n    const [site, setSite] = useState('');\n\n    //#endregion\n\n    const [contests, setContests] = useState<Array<Contest>>(new Array<Contest>());\n    const [isLoading, setIsLoading] = useState(true);\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxt('Adicionar');\n\n        const getContest = async () => {\n\n            await api.getContest()\n                .then(res => {\n\n                    var contest = res as Array<Contest>;\n\n                    setContests(contest);\n                    setIsLoading(false);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getContest();\n\n        const getArmedForce = async () => {\n\n            await api.getArmedForce()\n                .then(res => {\n\n                    var models = res as Array<ArmedForce>;\n\n                    var opSelect = new Array<SelectModel>();\n\n                    models.forEach(g => {\n                        var cSel = new SelectModel();\n                        cSel.label = g.name;\n                        cSel.value = g.id;\n                        opSelect.push(cSel);\n                    });\n\n                    setOptionArmedForceSelect(opSelect);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getArmedForce();\n\n        const getPatent = async () => {\n\n            await api.getPatent()\n                .then(res => {\n\n                    var models = res as Array<Patent>;\n\n                    var opSelect = new Array<SelectModel>();\n\n                    models.forEach(g => {\n                        var cSel = new SelectModel();\n                        cSel.label = g.name;\n                        cSel.value = g.id;\n                        opSelect.push(cSel);\n                    });\n\n                    setOptionPatentSelect(opSelect);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getPatent();\n\n        const getScholarity = async () => {\n\n            await api.getScholarity()\n                .then(res => {\n\n                    var models = res as Array<Scholarity>;\n\n                    var opSelect = new Array<SelectModel>();\n\n                    models.forEach(g => {\n                        var cSel = new SelectModel();\n                        cSel.label = g.name;\n                        cSel.value = g.id;\n                        opSelect.push(cSel);\n                    });\n\n                    setOptionScholaritySelect(opSelect);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getScholarity();\n    }, []);\n\n    const handleArmedForceSelect = (event: ValueType<SelectModel, false>) => setArmedForceSelect(event);\n    const handlePatentSelect = (event: ValueType<SelectModel, false>) => setPatentSelect(event);\n    const handleScholaritySelect = (event: ValueType<SelectModel, false>) => setScholaritySelect(event);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(name, 'nome');\n        var yError = Validations.validateRequiredField(year?.toString(), 'ano');\n        var aFError = Validations.validateRequiredField(armedForceSelect?.value, 'força armada');\n        var pError = Validations.validateRequiredField(patentSelect?.value, 'patente');\n        var sError = Validations.validateRequiredField(scholaritySelect?.value, 'escolaridade');\n\n        if(nError || yError || aFError || pError || sError)\n        {\n            setNameError(nError);\n            setYearError(yError);\n            setArmedForceError(aFError);\n            setPatentError(pError);\n            setScholarityError(sError);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            setNameError('');\n            setYearError('');\n            setArmedForceError('');\n            setPatentError('');\n            setScholarityError('');\n\n            const add = async () => {\n\n                var model = new Contest();\n                model.name = name;\n                model.year = year;\n                model.armedForceId = armedForceSelect?.value!;\n                model.patentId = patentSelect?.value!;\n                model.scholarityId = scholaritySelect?.value!;\n                model.salary = salary;\n                model.questionsLength = questionsLength;\n                model.questionDescription = questionDescription;\n                model.vacancies = vacancies;\n                model.vacanciesDescription = vacanciesDescription;\n                model.testDate = testDate;\n                model.requirements = requirements;\n                model.registration = registration;\n                model.areas = areas;\n                model.locations = locations;\n                model.duration = duration;\n                model.site = site;\n\n                await api.insertContest(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as Contest;\n                        contests.push(newModel);\n                        setContests(contests);\n\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(res.data.message, true);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(error.message, false);\n                    })\n            }\n            add();\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n            \n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Concursos\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <Accordion>\n                    <div className={`${styles.div_buttons}`}>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className={`${styles.btn_menu}`}>\n                            Adicionar\n                        </Accordion.Toggle>\n                    </div>\n                    <div>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card>\n                                <Card.Body>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label} ${styles.form_label_required}`}>\n                                                Nome\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o nome\" \n                                                value={name}\n                                                onChange={(e) => setName(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {nameError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label} ${styles.form_label_required}`}>\n                                                Ano\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o ano\" \n                                                value={year}\n                                                onChange={(e) => setYear(+Utils.onlyNumberMask(e.target.value))}\n                                                className={`${styles.form_control}`}\n                                                min={1900}\n                                                max={9999}\n                                                minLength={4}\n                                                maxLength={4}\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {yearError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label_required}`}>\n                                                Força armada\n                                            </Form.Label>\n                                            <Select \n                                                value={armedForceSelect} \n                                                onChange={(e: ValueType<SelectModel, false>) => handleArmedForceSelect(e)}\n                                                options={optionArmedForceSelect} \n                                                placeholder='Selecione a força armada' \n                                                menuPlacement='bottom'\n                                                menuPosition='fixed'\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {armedForceError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label_required}`}>\n                                                Patente\n                                            </Form.Label>\n                                            <Select \n                                                value={patentSelect} \n                                                onChange={(e: ValueType<SelectModel, false>) => handlePatentSelect(e)}\n                                                options={optionPatentSelect} \n                                                placeholder='Selecione a patente' \n                                                menuPlacement='bottom'\n                                                menuPosition='fixed'\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {patentError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label_required}`}>\n                                                Escolaridade\n                                            </Form.Label>\n                                            <Select \n                                                value={scholaritySelect} \n                                                onChange={(e: ValueType<SelectModel, false>) => handleScholaritySelect(e)}\n                                                options={optionScholaritySelect} \n                                                placeholder='Selecione a escolaridade' \n                                                menuPlacement='bottom'\n                                                menuPosition='fixed'\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {scholarityError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Salário\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"number\" \n                                                placeholder=\"Digite o ano\" \n                                                value={salary}\n                                                onChange={(e) => setSalary(+e.target.value)}\n                                                className={`${styles.form_control}`}\n                                                step={'any'}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Questões\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o número de questões\" \n                                                value={questionsLength}\n                                                onChange={(e) => setQuestionsLength(+Utils.onlyNumberMask(e.target.value))}\n                                                className={`${styles.form_control}`}\n                                                min={0}\n                                                max={9999}\n                                            />\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite a descrição das questões\" \n                                                value={questionDescription}\n                                                onChange={(e) => setQuestionDescription(e.target.value)}\n                                                className={`${styles.form_control} mt-2`}\n                                                as=\"textarea\" \n                                                rows={3}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"formName\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Vagas\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o número de vagas\" \n                                                value={vacancies}\n                                                onChange={(e) => setVacancies(+Utils.onlyNumberMask(e.target.value))}\n                                                className={`${styles.form_control}`}\n                                                min={0}\n                                                max={9999999}\n                                            />\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite a descrição das vagas\" \n                                                value={vacanciesDescription}\n                                                onChange={(e) => setVacanciesDescription(e.target.value)}\n                                                className={`${styles.form_control} mt-2`}\n                                                as=\"textarea\" \n                                                rows={3}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Data da prova\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"date\" \n                                                placeholder=\"Digite a data da prova\" \n                                                value={testDate}\n                                                onChange={(e) => setTestDate(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Requisitos\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite os requisitos\" \n                                                value={requirements}\n                                                onChange={(e) => setRequirements(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                                as=\"textarea\" \n                                                rows={3}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Inscrições\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite as inscrições\" \n                                                value={registration}\n                                                onChange={(e) => setRegistration(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                                as=\"textarea\" \n                                                rows={3}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Áreas\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite as áreas de especialização\" \n                                                value={areas}\n                                                onChange={(e) => setAreas(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                                as=\"textarea\" \n                                                rows={3}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Local\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o local do internato\" \n                                                value={locations}\n                                                onChange={(e) => setLocations(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                                as=\"textarea\" \n                                                rows={3}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Duração\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite a duração do internato\" \n                                                value={duration}\n                                                onChange={(e) => setDuration(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Site\n                                            </Form.Label>\n                                            <Form.Control \n                                                type=\"text\" \n                                                placeholder=\"Digite o site\" \n                                                value={site}\n                                                onChange={(e) => setSite(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                        </Form.Group>\n\n                                        <div className={`text-center mt-3`}>\n                                            <button type=\"submit\" className={`${styles.btn_add}`}>\n                                                {btnTxt}\n                                            </button>\n                                        </div>\n                                    </Form>\n                                </Card.Body>\n                            </Card>\n                        </Accordion.Collapse>\n                    </div>\n                </Accordion>\n            </div>\n            <div>\n\n                {isLoading ?\n                    <div className={`text-center`}>\n                        <Spinner animation=\"grow\" size=\"sm\" className={`color_primary`} />\n                    </div>\n                    :\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Ano</th>\n                                <th>Força Armada</th>\n                                <th>Patente</th>\n                                <th>Escolaridade</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        {contests.map((s, k) => (\n                            <AdminContestTr \n                                contests={contests}\n                                contest={s}\n                                setContests={setContests}\n                                optionArmedForceSelect={optionArmedForceSelect}\n                                optionPatentSelect={optionPatentSelect}\n                                optionScholaritySelect={optionScholaritySelect}\n                                key={k} \n                            />\n                        ))}\n                    </Table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AdminContest;","import React, { useEffect, useState } from 'react';\nimport { Spinner, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Alert from '../components/Alert';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Utils } from '../configs/Utils';\nimport { Question } from '../models/Question';\nimport styles from '../styles/admin.module.css';\n\nconst AdminQuestion = (props: Props) => {\n\n    const [questions, setQuestions] = useState<Array<Question>>(new Array<Question>());\n    const [isLoading, setIsLoading] = useState(true);\n\n    const [btnTxtDelete, setBtnTxtDelete] = useState<string | object>();\n    const [btnDeleteDisable, setBtnDeleteDisable] = useState(false);\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxtDelete('Excluir');\n\n        const getQuestion = async () => {\n\n            await api.getQuestion()\n                .then(res => {\n\n                    var patent = res as Array<Question>;\n\n                    setQuestions(patent);\n                    setIsLoading(false);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getQuestion();\n    }, []);\n\n    const handleDelete = async (id: string) => {\n\n        if(window.confirm(`Tem certeza que deseja excluir a força armada?`))\n        {\n            setBtnDeleteDisable(true);\n            setBtnTxtDelete(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n            await api.deleteQuestion(id)\n                .then(res => {\n\n                    var newSch = questions?.filter((s) => s.id !== id);\n                    setQuestions!(newSch!);\n                    Utils.alertLocalStorage(res.data.message, true);\n                })\n                .catch(err => {\n                    console.log(err);\n                    setBtnDeleteDisable(false);\n                    setBtnTxtDelete('Excluir');\n                    Utils.alertLocalStorage(err.message, false);\n                });\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n            \n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Questões\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                    <div className={`${styles.div_buttons}`}>\n                        <Link\n                            className={`${styles.btn_menu}`}\n                            to={`/admin/questoes/inserir`}\n                        >\n                            Adicionar\n                        </Link>\n                        <Link\n                            className={`${styles.btn_menu} ml-0 ml-md-2`}\n                            to={`/admin/questoes/textos`}\n                        >\n                            Textos\n                        </Link>\n                    </div>\n            </div>\n            <div>\n\n                {isLoading ?\n                    <div className={`text-center`}>\n                        <Spinner animation=\"grow\" size=\"sm\" className={`color_primary`} />\n                    </div>\n                    :\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Pergunta</th>\n                                <th>Matéria</th>\n                                <th>Concurso</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {questions.map((s, k) => (\n                                <tr key={k}>\n                                    <td>\n                                        {s.ask}\n                                    </td>\n                                    <td>\n                                        {s.subject?.name}\n                                    </td>\n                                    <td>\n                                        {s.contest?.name + ' - ' + s.contest?.year}\n                                    </td>\n                                    <td>\n                                        <Link\n                                            className={`${styles.btn_table_primary}`}\n                                            to={`/admin/questoes/editar/${s.id}`}\n                                        >\n                                            Atualizar\n                                        </Link>\n                                        <button \n                                            className={`${styles.btn_table_secondary} ml-2`}\n                                            onClick={() => handleDelete(s.id)}\n                                            disabled={btnDeleteDisable}\n                                        >\n                                            {btnTxtDelete}\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AdminQuestion;","import { Base } from \"./base/Base\";\nimport { v4 as uuid } from 'uuid';\n\nexport class Alternative extends Base {\n\n    text: string = '';\n\n    questionId: string = uuid();\n\n    position: number = 0;\n\n    isCorrect: boolean = false;\n}\n","import { Base } from \"./base/Base\";\n\nexport class QuestionText extends Base {\n\n    text: string = '';\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport Select, { ValueType } from 'react-select';\nimport { faCheckCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Api } from '../configs/Api';\nimport { AdminQuestionAddParams } from \"../configs/Params\";\nimport { Validations } from \"../configs/Validations\";\nimport { Alternative } from \"../models/Alternative\";\nimport { QuestionText } from \"../models/QuestionText\";\nimport { SelectModel } from '../models/SelectModel';\nimport { SubjectMatter } from \"../models/SubjectMatter\";\nimport styles from '../styles/admin.module.css';\n\nconst AdminQuestionAddForm = ({ \n    question, \n    questions, \n    setQuestions,\n    subjects,\n    contests,\n    questionTexts \n} : AdminQuestionAddParams) => {\n\n    //#region fields\n    \n    const [contestSelect, setContestSelect] = useState<SelectModel | null>();\n    const [optionContestSelect, setOptionContestSelect] = useState<SelectModel[]>(new Array<SelectModel>());\n    \n    const [subjectSelect, setSubjectSelect] = useState<SelectModel | null>();\n    const [optionSubjectSelect, setOptionSubjectSelect] = useState<SelectModel[]>(new Array<SelectModel>());\n    \n    const [subjectMatterSelect, setSubjectMatterSelect] = useState<SelectModel | null>();\n    const [optionSubjectMatterSelect, setOptionSubjectMatterSelect] = useState<SelectModel[]>(new Array<SelectModel>());\n    \n    const [questionTextSelect, setQuestionTextSelect] = useState<SelectModel | null>();\n    const [optionQuestionTextSelect, setOptionQuestionTextSelect] = useState<SelectModel[]>(new Array<SelectModel>());\n\n    //#endregion\n\n    //#region QuestionText\n\n    const [text, setText] = useState('');\n    const [textError, setTextError] = useState('');\n\n    const [btnTextDisable, setBtnTextDisable] = useState(false);\n    const [displayQuestionText, setDisplayQuestionText] = useState('none');\n\n    const [btnText, setBtnText] = useState<string | object>();\n\n    //#endregion\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnText('Adicionar');\n\n        var cSelect = new Array<SelectModel>();\n\n        contests.forEach(g => {\n            var cSel = new SelectModel();\n            cSel.label = `${g.name} - ${g.year}`;\n            cSel.value = g.id;\n            cSelect.push(cSel);\n            \n            if(question.contestId !== '' && question.contestId !== undefined && question.contestId === g.id)\n            {\n                setContestSelect(cSel);\n            }\n        });\n\n        setOptionContestSelect(cSelect);\n\n        var sSelect = new Array<SelectModel>();\n\n        subjects.forEach(g => {\n            var cSel = new SelectModel();\n            cSel.label = g.name;\n            cSel.value = g.id;\n            sSelect.push(cSel);\n\n            if(question.subjectId !== '' && question.subjectId !== undefined && question.subjectId === g.id)\n            {\n                setSubjectSelect(cSel);\n            }\n        });\n\n        setOptionSubjectSelect(sSelect);\n\n        if(question.subjectId !== '' && question.subjectMatterId !== '')\n        {\n            getSubjectMatter(question.subjectId, question.subjectMatterId);\n        }\n\n        var qtSelect = new Array<SelectModel>();\n\n        var cSel = new SelectModel();\n        cSel.label = 'Nenhum texto selecionado';\n        cSel.value = '';\n        qtSelect.push(cSel);\n\n        questionTexts.forEach(g => {\n            var cSel = new SelectModel();\n            cSel.label = g.text;\n            cSel.value = g.id;\n            qtSelect.push(cSel);\n\n            if(question.questionTextId !== '' && question.questionTextId !== undefined && question.questionTextId === g.id)\n            {\n                setQuestionTextSelect(cSel);\n            }\n        });\n\n        setOptionQuestionTextSelect(qtSelect);\n    }, []);\n\n    const getSubjectMatter = async (subjectId: string, subjectMatterId?: string) => {\n    \n        await api.getSubjectMatterBySubjectId(subjectId)\n            .then(res => {\n\n                var models = res as Array<SubjectMatter>;\n                \n                var opSelect = new Array<SelectModel>();\n\n                models.forEach(g => {\n                    var cSel = new SelectModel();\n                    cSel.label = g.name;\n                    cSel.value = g.id;\n                    opSelect.push(cSel);\n\n                    if(question.subjectMatterId !== '' && question.subjectMatterId === g.id)\n                    {\n                        setSubjectMatterSelect(cSel);\n                    }\n                });\n\n                setOptionSubjectMatterSelect(opSelect);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    const handleSubjectSelect = (event: ValueType<SelectModel, false>) => {\n\n        handleSetProperty('subjectId', event?.value!);\n        setSubjectSelect(event);\n\n        if(event?.value)\n        {\n            getSubjectMatter(event?.value!);\n        }\n    }\n\n    const handleAddAlternative = () => {\n        const newAlt = question.alternatives.concat(new Alternative());\n        handleSetProperty('alternatives', newAlt);\n    }\n    \n    const handleSetAlternative = (value: string, k: number) => {\n        const newAlt = question.alternatives?.map((alt, index) => {\n            if(k === index)\n                return { ...alt, text: value, };\n            else\n                return alt;\n        });\n        handleSetProperty('alternatives', newAlt);\n    }\n\n    const handleRemoveAlternative = (k: number) => {\n        const newAlt = question.alternatives?.filter((_, i) => i !== k);\n        handleSetProperty('alternatives', newAlt);\n    }\n\n    const handleSetAlternativeCorrect = (k: number) => {\n        const newAlt = question.alternatives?.map((alt, index) => {\n            if(k === index)\n                return { ...alt, isCorrect: true, };\n            else\n                return { ...alt, isCorrect: false, };\n        });\n        handleSetProperty('alternatives', newAlt);\n    }\n\n    const handleInsertImage = async (files: FileList | null) => {\n\n        if(files && window.confirm('Deseja adicionar esta imagem?'))\n        {\n            for(var f of Array.from(files))\n            {\n                await api.insertImage(f)\n                    .then(res => {\n\n                        var imageUrl = res.data.image.fileUrl;\n                        handleSetProperty('ask', question.ask + imageUrl);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n        }\n    }\n\n    const handleCheckQuestionText = () => {\n        \n        setDisplayQuestionText(displayQuestionText === 'none' ? 'block' : 'none');\n    }\n\n    const handleAddQuestionText = async (text: string) => {\n\n        setBtnText(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n        setBtnTextDisable(true);\n\n        var tError = Validations.validateRequiredField(text, 'texto');\n\n        if(tError)\n        {\n            setTextError(tError);\n            setBtnTextDisable(false);\n            setBtnText('Adicionar');\n        }\n        else\n        {\n            var questionText = new QuestionText();\n            questionText.text = text;\n    \n            await api.insertQuestionText(questionText)\n                .then(res => {\n                    \n                    var model = res.data.model as QuestionText;\n    \n                    var select = new SelectModel();\n                    select.label = model.text;\n                    select.value = model.id;\n    \n                    const newModel = optionQuestionTextSelect.concat(select);\n\n                    handleSetPropertySelect('questionTextId', select, setQuestionTextSelect);\n                    setOptionQuestionTextSelect(newModel);\n                    setBtnTextDisable(false);\n                    setBtnText('Adicionar');\n                    setDisplayQuestionText('none');\n                })\n                .catch(err => {\n                    console.log(err);\n                    setBtnTextDisable(false);\n                    setBtnText('Adicionar');\n                });\n        }\n    }\n\n    const handleSetPropertySelect = (\n            name: string, \n            event: ValueType<SelectModel, false>, \n            setSelect: React.Dispatch<React.SetStateAction<SelectModel | null | undefined>>\n        ) => {\n        \n        handleSetProperty(name, event?.value!);\n        setSelect(event);\n    }\n\n    const handleSetProperty = (name: string, value: string | boolean | Object) => {\n\n        const newSch = questions?.map((s, i) => {\n            if(s === question)\n                return { ...s, [name] : value };\n            else\n                return s;\n        });\n        setQuestions!(newSch!);\n    }\n\n    const handleRemoveQuestion = () => {\n\n        if(window.confirm(`Tem certeza que deseja remover a questão ${questions.findIndex(x => x === question) + 1}?`))\n        {\n            const newQuestions = questions.filter(x => x !== question);\n            setQuestions(newQuestions);\n        }\n    }\n\n    return (\n        <Card className={`mt-1`}>\n            <Card.Body>\n                <div className={`${styles.div_btn_remove}`}>\n                    <button\n                        type='button'\n                        className={`${styles.btn_remove_alternative}`} \n                        onClick={() => handleRemoveQuestion()}\n                        title='Remover questão'\n                    >\n                        <FontAwesomeIcon icon={faMinusCircle} className={`${styles.icon_menu}`} />\n                    </button>\n                </div>\n                <Form.Group>\n                    <Form.Label className={`${styles.form_label_required}`}>\n                        Concurso\n                    </Form.Label>\n                    <Select \n                        value={contestSelect} \n                        onChange={(e: ValueType<SelectModel, false>) => handleSetPropertySelect('contestId', e, setContestSelect)}\n                        options={optionContestSelect} \n                        placeholder='Selecione o concurso' \n                        menuPlacement='bottom'\n                        menuPosition='fixed'\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label className={`${styles.form_label_required}`}>\n                        Matéria\n                    </Form.Label>\n                    <Select \n                        value={subjectSelect} \n                        onChange={(e: ValueType<SelectModel, false>) => handleSubjectSelect(e)}\n                        options={optionSubjectSelect} \n                        placeholder='Selecione a matéria' \n                        menuPlacement='bottom'\n                        menuPosition='fixed'\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label className={`${styles.form_label_required}`}>\n                        Assunto\n                    </Form.Label>\n                    <Select \n                        value={subjectMatterSelect} \n                        onChange={(e: ValueType<SelectModel, false>) => handleSetPropertySelect('subjectMatterId', e, setSubjectMatterSelect)}\n                        options={optionSubjectMatterSelect} \n                        placeholder='Selecione o assunto' \n                        menuPlacement='bottom'\n                        menuPosition='fixed'\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label className={`${styles.form_label}`}>\n                        Texto\n                    </Form.Label>\n                    <Select \n                        value={questionTextSelect} \n                        onChange={(e: ValueType<SelectModel, false>) => handleSetPropertySelect('questionTextId', e, setQuestionTextSelect)}\n                        options={optionQuestionTextSelect} \n                        placeholder='Selecione o texto' \n                        menuPlacement='bottom'\n                        menuPosition='fixed'\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Adicionar texto\" onClick={handleCheckQuestionText} />\n                </Form.Group>\n\n                <Form.Group style={{ display : displayQuestionText }}>\n                    <Form.Group>\n                        <Form.Label>Texto</Form.Label>\n                        <Form.Control\n                            placeholder=\"Digite o texto\" \n                            value={text}\n                            onChange={(e) => setText(e.target.value)}\n                            as='textarea'\n                            rows={4}\n                        />\n                        <Form.Text className=\"text-danger\">\n                            {textError}\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <button \n                            type='button'\n                            className={`${styles.btn_add}`}\n                            disabled={btnTextDisable}\n                            onClick={() => handleAddQuestionText(text)}\n                        >\n                            {btnText}\n                        </button>\n                    </Form.Group>\n                </Form.Group>\n\n                <div className={`row`}>\n                    <div className={`col-md-6 pl-0 pr-0`}>\n                        <Form.Label className={`${styles.form_label_required}`}>\n                            Pergunta\n                        </Form.Label>\n                        <Form.Group>\n                            <Form.Control\n                                placeholder=\"Digite a pergunta\" \n                                value={question.ask}\n                                onChange={(e) => handleSetProperty('ask', e.target.value)}\n                                className={`${styles.form_control}`}\n                                as='textarea'\n                                rows={4}\n                            />\n                        </Form.Group>\n\n                        <div>\n                            <div>\n                                <button\n                                    type='button'\n                                    className={`${styles.btn_add_alternative}`} \n                                    onClick={() => handleAddAlternative()}\n                                >\n                                    + Adicionar alternativa\n                                </button>\n                                <label htmlFor={`file-upload-${question.id}`} className={`${styles.input_file}`}>\n                                    + Adicionar imagem\n                                </label>\n                                <input \n                                    id={`file-upload-${question.id}`}\n                                    type=\"file\"\n                                    accept=\"image/*\"\n                                    onChange={(e) => handleInsertImage(e.target.files)} \n                                    multiple={false}\n                                    className={`${styles.input_file}`}\n                                />\n                            </div>\n                        </div>\n\n                        <div>\n                            {question.alternatives.map((a, k) => (\n                                <div className={`d-flex flex-row mb-2`} key={k}>\n                                    <Form.Control\n                                        placeholder={`Alternativa ${k+1}`}\n                                        value={a.text}\n                                        onChange={(e) => handleSetAlternative(e.target.value, k)}\n                                        className={`${styles.form_control}`}\n                                        as='textarea'\n                                        rows={2}\n                                    />\n                                    <button\n                                        type='button'\n                                        className={`${styles.btn_remove_alternative}`} \n                                        onClick={() => handleRemoveAlternative(k)}\n                                        title='Remover alternativa'\n                                    >\n                                        <FontAwesomeIcon icon={faMinusCircle} className={`${styles.icon_menu}`} />\n                                    </button>\n                                    <button\n                                        type='button'\n                                        className={`\n                                            ${styles.btn_incorrect_alternative} ${a.isCorrect ? styles.btn_correct_alternative : ''}\n                                        `} \n                                        onClick={() => handleSetAlternativeCorrect(k)}\n                                        title='Marcar alternativa correta'\n                                    >\n                                        <FontAwesomeIcon icon={faCheckCircle} className={`${styles.icon_menu}`} />\n                                    </button>\n                                </div>\n                            ))}\n                        </div>\n\n                        <div>\n                            <label>\n                                <input \n                                    type=\"checkbox\"\n                                    defaultChecked={question.isCanceled}\n                                    onChange={() => handleSetProperty('isCanceled', !question.isCanceled)}\n                                /> Questão anulada\n                            </label>\n                        </div>\n\n                        <Form.Label className={`${styles.form_label}`}>\n                            Solução\n                        </Form.Label>\n                        <Form.Group>\n                            <Form.Control\n                                placeholder=\"Digite a solução\"\n                                value={question.solution}\n                                onChange={(e) => handleSetProperty('solution', e.target.value)}\n                                className={`${styles.form_control}`}\n                                as='textarea'\n                                rows={3}\n                            />\n                        </Form.Group>\n                    </div>\n                    <div className={`col-md-6`}>\n                        <Form.Label className={`${styles.form_label}`}>\n                            Veja aqui a saída:\n                        </Form.Label>\n\n                        <div className={`border border-dark rounded p-2`}>\n                            <div dangerouslySetInnerHTML={{ __html : question.ask }} style={{ whiteSpace : 'pre-line' }}></div>\n\n                            {question.alternatives.map((a, k) => (\n                                <div \n                                    key={k} \n                                    dangerouslySetInnerHTML={{ __html : `${k+1}) ${a.text}` }} style={{ whiteSpace : 'pre-line' }}\n                                    className={`mt-2`}\n                                ></div>\n                            ))}\n\n                            {question.alternatives.find(x => x.isCorrect) ? \n                                <div className={`text-danger mt-2`}>\n                                    <small>\n                                        Alternativa correta: <div dangerouslySetInnerHTML={{ __html : question.alternatives.find(x => x.isCorrect)?.text! }} style={{ whiteSpace : 'pre-line', display: 'contents', fontWeight: 'bold' }} ></div>\n                                    </small>\n                                </div>\n                            : ''}\n                        </div>\n\n                        {question.solution ? \n                            <div className={`border border-dark rounded p-2 mt-2`}>\n                                <p>Solução:</p>\n                                \n                                <div dangerouslySetInnerHTML={{ __html : question.solution }} style={{ whiteSpace : 'pre-line' }}></div>\n                            </div>\n                        : ''}\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default AdminQuestionAddForm;","import { Base } from \"./base/Base\";\nimport { v4 as uuid } from 'uuid';\nimport { QuestionText } from \"./QuestionText\";\nimport { Contest } from \"./Contest\";\nimport { Subject } from \"./Subject\";\nimport { SubjectMatter } from \"./SubjectMatter\";\nimport { Alternative } from \"./Alternative\";\n\nexport class Question extends Base {\n\n    ask: string = '';\n\n    imageUrl: string = '';\n    \n    questionTextId: string | undefined;\n    \n    questionText: QuestionText | null = null;\n    \n    contestId: string = '';\n    \n    contest: Contest | null = null;\n    \n    subjectId: string = '';\n    \n    subject: Subject | null = null;\n    \n    subjectMatterId: string = '';\n    \n    subjectMatter: SubjectMatter | null = null;\n    \n    isCanceled: boolean = false;\n\n    solution: string = '';\n\n    alternatives: Array<Alternative> = new Array<Alternative>();\n}\n","import React, { useEffect, useState } from 'react';\nimport { Form, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport AdminQuestionAddForm from '../components/AdminQuestionAddForm';\nimport Alert from '../components/Alert';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Validations } from '../configs/Validations';\nimport { Contest } from '../models/Contest';\nimport { Question } from '../models/Question';\nimport { QuestionText } from '../models/QuestionText';\nimport { Subject } from '../models/Subject';\nimport styles from '../styles/admin.module.css';\n\nconst AdminQuestionAdd = (props: Props) => {\n    \n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const [questions, setQuestions] = useState(new Array<Question>());\n    const [contests, setContests] = useState(new Array<Contest>());\n    const [subjects, setSubjects] = useState(new Array<Subject>());\n    const [questionTexts, setQuestionTexts] = useState(new Array<QuestionText>());\n\n    const [isLoading, setIsLoading] = useState(true);\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxt('Adicionar');\n\n        const getContest = async () => {\n\n            await api.getContest()\n                .then(res => {\n\n                    var models = res as Array<Contest>;\n                    setContests(models);\n                    \n                    const getSubject = async () => {\n\n                        await api.getSubject()\n                            .then(res => {\n            \n                                var models = res as Array<Subject>;\n                                setSubjects(models);\n                                \n                                const getQuestionText = async () => {\n\n                                    await api.getQuestionText()\n                                        .then(res => {\n                        \n                                            var models = res as Array<QuestionText>;\n                                            setQuestionTexts(models);\n                                            setIsLoading(false);\n                                        })\n                                        .catch(err => {\n                                            console.log(err);\n                                        });\n                                }\n                                getQuestionText();\n                            })\n                            .catch(err => {\n                                console.log(err);\n                            });\n                    }\n                    getSubject();\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getContest();\n        \n    }, []);\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        if(questions.length <= 0)\n        {\n            alert('Adicione uma ou mais questões!');\n            setBtnTxt('Adicionar');\n        }\n\n        var errors = '';\n\n        questions.forEach((question, index) => {\n\n            var nError = Validations.validateRequiredField(question.ask, 'pergunta');\n            var cError = Validations.validateRequiredField(question.contestId, 'concurso');\n            var sError = Validations.validateRequiredField(question.subjectId, 'matéria');\n            var sMError = Validations.validateRequiredField(question.subjectMatterId, 'assunto');\n            var aError = question.alternatives.length <= 0 ? 'A pergunta deve conter 1 ou mais alternativas!' : '';\n\n            if(nError || cError || sError || sMError || aError)\n            {\n                errors += `${errors ? '\\n\\n' : ''}Questão ${index+1}:\\n`;\n                errors += nError ? `${nError}` : '';\n                errors += cError ? `${cError}` : '';\n                errors += sError ? `${sError}` : '';\n                errors += sMError ? `${sMError}` : '';\n                errors += aError ? `${aError}` : '';\n            }\n        });\n\n        if(errors !== '')\n        {\n            alert(errors);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            var message = '';\n            \n            for(const question of questions) {\n                \n                var index = questions.indexOf(question);\n\n                await api.insertQuestion(question)\n                .then(res => {\n\n                    var q = res.data.model as Question;\n\n                    question.alternatives.forEach((alt, index) => {\n                        alt.questionId = q.id;\n                        alt.position = index + 1;\n                        api.insertAlternative(alt);\n                    });\n\n                    message += `Questão ${index+1} - ${res.data.message}\\n`;\n                })\n                .catch(error => {\n                    console.log(error);\n                    message += `Questão ${index+1} - ${error.message}\\n`;\n                });\n            }\n\n            alert(message);\n            setBtnTxt('Adicionar');\n        }\n    }\n\n    const handleAddQuestion = () => {\n\n        var newQuestion = new Question();\n\n        if(questions.length > 0)\n        {\n            var lastQuestion = questions[questions.length - 1];\n            newQuestion.alternatives = lastQuestion.alternatives;\n            newQuestion.ask = lastQuestion.ask;\n            newQuestion.contestId = lastQuestion.contestId;\n            newQuestion.isCanceled = lastQuestion.isCanceled;\n            newQuestion.questionTextId = lastQuestion.questionTextId;\n            newQuestion.solution = lastQuestion.solution;\n            newQuestion.subjectId = lastQuestion.subjectId;\n            newQuestion.subjectMatterId = lastQuestion.subjectMatterId;\n        }\n        \n        const newQuestions = [...questions, newQuestion];\n        setQuestions(newQuestions);\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n\n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Adicionar questão\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <div className={`${styles.div_buttons}`}>\n                    <Link\n                        className={`${styles.btn_menu}`}\n                        to={`/admin/questoes`}\n                    >\n                        Voltar\n                    </Link>\n                </div>\n            </div>\n            <div>\n                <div>\n                    <Form onSubmit={handleSubmit}>\n                        {isLoading ? \n                            <div className={`text-center`}>\n                                <Spinner animation=\"grow\" size=\"sm\" className={`color_primary`} />\n                            </div>\n                        :\n                        questions.map((question, key) => (\n                            <AdminQuestionAddForm \n                                key={key}\n                                question={question}\n                                questions={questions}\n                                setQuestions={setQuestions}\n                                contests={contests}\n                                subjects={subjects}\n                                questionTexts={questionTexts}\n                            />\n                        ))}\n                        \n                        <div className={`text-center mt-3`}>\n                            <div>\n                                <button\n                                    type='button'\n                                    onClick={() => handleAddQuestion()}\n                                    className={`${styles.btn_menu} mb-2`}\n                                >\n                                    Adicionar questão\n                                </button>\n                            </div>\n                            <button type=\"submit\" className={`${styles.btn_add}`}>\n                                {btnTxt}\n                            </button>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminQuestionAdd;","import React, { useEffect, useState } from 'react';\nimport { Form, Spinner } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Api } from '../configs/Api';\nimport { Utils } from '../configs/Utils';\nimport { Validations } from '../configs/Validations';\nimport { Question } from '../models/Question';\nimport styles from '../styles/admin.module.css';\n\nconst AdminQuestionUpdate = () => {\n\n    const [ask, setAsk] = useState('');\n    const [askError, setAskError] = useState('');\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const api = new Api();\n    const history = useHistory();\n\n    useEffect(() => {\n\n\n    }, []);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(ask, 'pergunta');\n\n        if(nError)\n        {\n            setAskError(nError);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            const add = async () => {\n\n                var model = new Question();\n                model.ask = ask;\n\n                await api.insertQuestion(model)\n                    .then(res => {\n\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(res.data.message, true);\n                        history.push('/admin/questoes');\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(error.message, false);\n                    })\n            }\n            add();\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Atualizar questão\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <div className={`${styles.div_buttons}`}>\n                    <Link\n                        className={`${styles.btn_menu}`}\n                        to={`/admin/questoes`}\n                    >\n                        Voltar\n                    </Link>\n                </div>\n            </div>\n            <div>\n                <div className={`row`}>\n                    <div className={`col-md-6`}>\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group controlId=\"formName\">\n                                <Form.Label className={`${styles.form_label}`}>\n                                    Nome\n                                </Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"Digite o nome\" \n                                    value={ask}\n                                    onChange={(e) => setAsk(e.target.value)}\n                                    className={`${styles.form_control}`}\n                                />\n                                <Form.Text className=\"text-danger\">\n                                    {askError}\n                                </Form.Text>\n                            </Form.Group>\n\n                            <div className={`text-center mt-3`}>\n                                <button type=\"submit\" className={`${styles.btn_add}`}>\n                                    {btnTxt}\n                                </button>\n                            </div>\n                        </Form>\n                    </div>\n                    <div className={`col-md-6`}>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminQuestionUpdate;","import React, { useEffect, useState } from \"react\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport { Api } from \"../../configs/Api\";\nimport { AdminQuestionTextParams } from \"../../configs/Params\";\nimport { Validations } from \"../../configs/Validations\";\nimport { QuestionText } from \"../../models/QuestionText\";\nimport styles from '../../styles/admin.module.css';\n\nconst AdminQuestionTextTr = ({ questionText, questionTexts, setQuestionTexts } : AdminQuestionTextParams) => {\n\n    const [displayTr, setDisplayTr] = useState('none');\n\n    const [text, setText] = useState('');\n    const [textError, setTextError] = useState('');\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n    const [btnDisable, setBtnDisable] = useState(false);\n\n    const [btnTxtDelete, setBtnTxtDelete] = useState<string | object>();\n    const [btnDeleteDisable, setBtnDeleteDisable] = useState(false);\n\n    const api = new Api();\n    \n    useEffect(() => {\n\n        setBtnTxt('Atualizar');\n        setBtnTxtDelete('Excluir');\n        setText(questionText?.text!);\n    }, []);\n\n    const handleOpenUpdate = () => {\n        setDisplayTr(displayTr === 'none' ? 'table-row' : 'none');\n    }\n\n    const handleUpdate = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnDisable(true);\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(text, 'nome');\n\n        if(nError)\n        {\n            setTextError(nError);\n            setBtnTxt('Atualizar');\n        }\n        else\n        {\n            const update = async () => {\n\n                var model = new QuestionText();\n                model.id = questionText?.id!;\n                model.text = text;\n\n                await api.updateQuestionText(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as QuestionText;\n                        \n                        const newSch = questionTexts?.map((s) => {\n\n                            if(s.id === newModel.id)\n                            {\n                                const update = {\n                                    ...s,\n                                    text: newModel.text\n                                }\n                                return update;\n                            }\n                            return s;\n                        });\n\n                        setQuestionTexts!(newSch!);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(res.data.message);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnDisable(false);\n                        setBtnTxt('Atualizar');\n                        alert(error.message);\n                    })\n            }\n            update();\n        }\n    }\n\n    const handleDelete = async () => {\n\n        if(window.confirm(`Tem certeza que deseja excluir o texto?`))\n        {\n            setBtnDeleteDisable(true);\n            setBtnTxtDelete(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n            await api.deleteQuestionText(questionText?.id!)\n                .then(res => {\n\n                    var newSch = questionTexts?.filter((s) => s !== questionText);\n                    setQuestionTexts!(newSch!);\n                    alert(res.data.message);\n                })\n                .catch(err => {\n                    console.log(err);\n                    setBtnDeleteDisable(false);\n                    setBtnTxtDelete('Excluir');\n                    alert(err.message);\n                });\n        }\n    }\n\n    return (\n        <tbody>\n            <tr>\n                <td>\n                    {questionText?.text}\n                </td>\n                <td className={`${styles.td_buttons}`}>\n                    <button \n                        className={`${styles.btn_table_primary}`}\n                        onClick={handleOpenUpdate}\n                    >\n                        {btnTxt}\n                    </button>\n                    <button \n                        className={`${styles.btn_table_secondary} ml-2`}\n                        onClick={handleDelete}\n                        disabled={btnDeleteDisable}\n                    >\n                        {btnTxtDelete}\n                    </button>\n                </td>\n            </tr>\n            <tr style={{ display: displayTr }}>\n                <td colSpan={100}>\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleUpdate}>\n                                <Form.Group controlId=\"formText\">\n                                    <Form.Label className={`${styles.form_label}`}>\n                                        Texto\n                                    </Form.Label>\n                                    <Form.Control \n                                        placeholder=\"Digite o nome\" \n                                        value={text}\n                                        onChange={(e) => setText(e.target.value)}\n                                        className={`${styles.form_control}`}\n                                        as='textarea'\n                                        rows={3}\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {textError}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <div className={`text-center mt-3`}>\n                                    <button type=\"submit\" className={`${styles.btn_add}`} disabled={btnDisable}>\n                                        {btnTxt}\n                                    </button>\n                                </div>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </td>\n            </tr>\n        </tbody>\n    )\n}\n\nexport default AdminQuestionTextTr;\n","import React, { useEffect, useState } from 'react';\nimport { Accordion, Card, Form, Spinner, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Alert from '../components/Alert';\nimport AdminQuestionTextTr from '../components/TableRow/AdminQuestionTextTr';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Utils } from '../configs/Utils';\nimport { Validations } from '../configs/Validations';\nimport { QuestionText } from '../models/QuestionText';\nimport styles from '../styles/admin.module.css';\n\nconst AdminQuestionText = (props: Props) => {\n\n    const [questionTexts, setQuestionTexts] = useState<Array<QuestionText>>(new Array<QuestionText>());\n    const [isLoading, setIsLoading] = useState(true);\n\n    const [text, setText] = useState('');\n    const [textError, setTextError] = useState('');\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxt('Adicionar');\n\n        const getQuestionText = async () => {\n\n            await api.getQuestionText()\n                .then(res => {\n\n                    var questionText = res as Array<QuestionText>;\n\n                    setQuestionTexts(questionText);\n                    setIsLoading(false);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        getQuestionText();\n    }, []);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(text, 'nome');\n\n        if(nError)\n        {\n            setTextError(nError);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            const add = async () => {\n\n                var model = new QuestionText();\n                model.text = text;\n\n                await api.insertQuestionText(model)\n                    .then(res => {\n\n                        var newModel = res.data.model as QuestionText;\n                        questionTexts.push(newModel);\n                        setQuestionTexts(questionTexts);\n\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(res.data.message, true);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(error.message, false);\n                    })\n            }\n            add();\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n            \n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Textos\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <Accordion>\n                    <div className={`${styles.div_buttons}`}>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className={`${styles.btn_menu}`}>\n                            Adicionar\n                        </Accordion.Toggle>\n                        <Link\n                            className={`${styles.btn_menu} ml-0 ml-md-2`}\n                            to={`/admin/questoes`}\n                        >\n                            Voltar\n                        </Link>\n                    </div>\n                    <div>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card>\n                                <Card.Body>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Group controlId=\"formText\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Texto\n                                            </Form.Label>\n                                            <Form.Control \n                                                placeholder=\"Digite o nome\" \n                                                value={text}\n                                                onChange={(e) => setText(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                                as='textarea'\n                                                rows={3}\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {textError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <div className={`text-center mt-3`}>\n                                            <button type=\"submit\" className={`${styles.btn_add}`}>\n                                                {btnTxt}\n                                            </button>\n                                        </div>\n                                    </Form>\n                                </Card.Body>\n                            </Card>\n                        </Accordion.Collapse>\n                    </div>\n                </Accordion>\n            </div>\n            <div>\n\n                {isLoading ?\n                    <div className={`text-center`}>\n                        <Spinner animation=\"grow\" size=\"sm\" className={`color_primary`} />\n                    </div>\n                    :\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Texto</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        {questionTexts.map((s, k) => (\n                            <AdminQuestionTextTr \n                                questionTexts={questionTexts}\n                                questionText={s}\n                                setQuestionTexts={setQuestionTexts}\n                                key={k} \n                            />\n                        ))}\n                    </Table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AdminQuestionText;","import React, { useEffect, useState } from 'react';\nimport { Accordion, Card, Form, Spinner } from 'react-bootstrap';\nimport Select, { ValueType } from 'react-select';\nimport Alert from '../components/Alert';\nimport { Api } from '../configs/Api';\nimport { Props } from '../configs/Props';\nimport { Utils } from '../configs/Utils';\nimport { Validations } from '../configs/Validations';\nimport { Alternative } from '../models/Alternative';\nimport { Question } from '../models/Question';\nimport { SelectModel } from '../models/SelectModel';\nimport styles from '../styles/admin.module.css';\n\nconst AdminAlternative = (props: Props) => {\n\n    const [questionSelect, setQuestionSelect] = useState<SelectModel | null>();\n    const [optionQuestionSelect, setOptionQuestionSelect] = useState<SelectModel[]>(new Array<SelectModel>());\n    \n    const [isCorrect, setIsCorrect] = useState(false);\n    const [position, setPosition] = useState(0);\n    \n    const [text, setText] = useState('');\n    const [textError, setTextError] = useState('');\n\n    const [btnTxt, setBtnTxt] = useState<string | object>();\n\n    const api = new Api();\n\n    useEffect(() => {\n\n        setBtnTxt('Adicionar');\n\n        const getQuestion = async () => {\n\n            await api.getQuestion()\n            .then(res => {\n\n                var models = res as Array<Question>;\n\n                var opSelect = new Array<SelectModel>();\n\n                models.forEach(g => {\n                    var cSel = new SelectModel();\n                    cSel.label = g.ask;\n                    cSel.value = g.id;\n                    opSelect.push(cSel);\n                });\n\n                setOptionQuestionSelect(opSelect);\n            });\n        }\n        getQuestion();\n    }, []);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event?.preventDefault();\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\n\n        var nError = Validations.validateRequiredField(text, 'texto');\n\n        if(nError)\n        {\n            setTextError(nError);\n            setBtnTxt('Adicionar');\n        }\n        else\n        {\n            const add = async () => {\n\n                var model = new Alternative();\n                model.questionId = questionSelect?.value!;\n                model.text = text;\n                model.position = position;\n                model.isCorrect = isCorrect;\n\n                await api.insertAlternative(model)\n                    .then(res => {\n\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(res.data.message, true);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setBtnTxt('Adicionar');\n                        Utils.alertLocalStorage(error.message, false);\n                    })\n            }\n            add();\n        }\n    }\n\n    return (\n        <div className={`m-4`}>\n\n            <Alert state={props.location.state} />\n            \n            <div className={`text-center`}>\n                <h1 className={`${styles.h_title}`}>\n                    Alternativas\n                </h1>\n            </div>\n\n            <div className={`mb-4`}>\n                <Accordion>\n                    <div className={`${styles.div_buttons}`}>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className={`${styles.btn_menu}`}>\n                            Adicionar\n                        </Accordion.Toggle>\n                    </div>\n                    <div>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card>\n                                <Card.Body>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Form.Group controlId=\"formName\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Questão\n                                            </Form.Label>\n                                            <Select \n                                                value={questionSelect} \n                                                onChange={(e: ValueType<SelectModel, false>) => setQuestionSelect(e)}\n                                                options={optionQuestionSelect} \n                                                placeholder='Selecione a questão' \n                                                menuPlacement='bottom'\n                                                menuPosition='fixed'\n                                            />\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formName\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Texto\n                                            </Form.Label>\n                                            <Form.Control \n                                                placeholder=\"Digite o texto\" \n                                                value={text}\n                                                onChange={(e) => setText(e.target.value)}\n                                                className={`${styles.form_control}`}\n                                                as='textarea'\n                                                cols={4}\n                                            />\n                                            <Form.Text className=\"text-danger\">\n                                                {textError}\n                                            </Form.Text>\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"formName\">\n                                            <Form.Label className={`${styles.form_label}`}>\n                                                Posição\n                                            </Form.Label>\n                                            <Form.Control \n                                                type='number'\n                                                placeholder=\"Digite a posição\" \n                                                value={position}\n                                                onChange={(e) => setPosition(+e.target.value)}\n                                                className={`${styles.form_control}`}\n                                            />\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"formName\">\n                                            <label>\n                                                <input \n                                                    type=\"checkbox\"\n                                                    defaultChecked={isCorrect}\n                                                    onChange={() => setIsCorrect(!isCorrect)}\n                                                /> Alternativa correta\n                                            </label>\n                                        </Form.Group>\n\n                                        <div className={`text-center mt-3`}>\n                                            <button type=\"submit\" className={`${styles.btn_add}`}>\n                                                {btnTxt}\n                                            </button>\n                                        </div>\n                                    </Form>\n                                </Card.Body>\n                            </Card>\n                        </Accordion.Collapse>\n                    </div>\n                </Accordion>\n            </div>\n            <div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminAlternative;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  } from \"react-router-dom\";\n  import { Session } from '../configs/Session';\nimport '../styles/app.css';\nimport Home from '../screens/Home';\nimport Login from '../screens/Login';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport NotFound from '../screens/NotFound';\nimport AdminLogin from '../screens/AdminLogin';\nimport AdminHome from '../screens/AdminHome';\nimport HeaderAdmin from '../components/HeaderAdmin';\nimport AdminScholarity from '../screens/AdminScholarity';\nimport AdminArmedForce from '../screens/AdminArmedForce';\nimport AdminSubject from '../screens/AdminSubject';\nimport AdminSubjectMatter from '../screens/AdminSubjectMatter';\nimport AdminPatent from '../screens/AdminPatent';\nimport AdminContest from '../screens/AdminContest';\nimport AdminQuestion from '../screens/AdminQuestion';\nimport AdminQuestionAdd from '../screens/AdminQuestionAdd';\nimport AdminQuestionUpdate from '../screens/AdminQuestionUpdate';\nimport AdminQuestionText from '../screens/AdminQuestionText';\nimport AdminAlternative from '../screens/AdminAlternative';\n\nconst PrivateRoute = ({ component: Component, ...rest } : any) => (\n    <Route\n      {...rest}\n      render={props =>\n        Session.isAuthenticated() ? \n        (\n            <div className={`div-root`}>\n                <Header />\n\n                <Component {...props} />\n\n                <Footer />\n            </div>\n        ) : \n        (\n            <Redirect \n                to={{ pathname: \"/login\" }} \n                {...props} \n            />\n        )\n      }\n    />\n);\n\nconst PrivateRouteAdmin = ({ component: Component, ...rest } : any) => (\n    <Route\n      {...rest}\n      render={props =>\n        Session.isAuthenticatedAdmin() ? \n        (\n            <div className={`div-root`}>\n                <HeaderAdmin />\n\n                <Component {...props} />\n\n                <Footer />\n            </div>\n        ) : \n        (\n            <Redirect \n                to={{ pathname: \"/admin/login\" }} \n                {...props} \n            />\n        )\n      }\n    />\n);\n\n// const PrivateRouteComponent = ({ component: Component, ...rest } : any) => (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         Session.isAuthenticated() ? \n//         (\n//             <Component {...props} />\n//         ) : \n//         (\n//             <Redirect \n//                 to={{ pathname: \"/login\" }} \n//                 {...props} \n//             />\n//         )\n//       }\n//     />\n// );\n\nconst AppNavigator = () => {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    {/* User */}\n                    <Route path={[\"/login\"]}\n                        render={(props) => \n                            <Login {...props} />\n                        }\n                    />\n                    <PrivateRoute exact path={[\"/\"]} component={Home} />\n                    {/* <PrivateRoute exact path={[\"/cadastros/exportar/:id?\"]} component={Exports} /> */}\n\n                    {/* Admin */}\n                    <Route exact path={[\"/admin/login\"]}\n                        render={(props) => \n                            <AdminLogin {...props} />\n                        }\n                    />\n                    <PrivateRouteAdmin exact path={[\"/admin\"]} component={AdminHome} />\n                    <PrivateRouteAdmin exact path={[\"/admin/questoes\"]} component={AdminQuestion} />\n                    <PrivateRouteAdmin exact path={[\"/admin/questoes/inserir\"]} component={AdminQuestionAdd} />\n                    <PrivateRouteAdmin exact path={[\"/admin/questoes/editar/:id\"]} component={AdminQuestionUpdate} />\n                    <PrivateRouteAdmin exact path={[\"/admin/questoes/textos\"]} component={AdminQuestionText} />\n                    <PrivateRouteAdmin exact path={[\"/admin/questoes/alternativas\"]} component={AdminAlternative} />\n                    <PrivateRouteAdmin exact path={[\"/admin/concursos\"]} component={AdminContest} />\n                    <PrivateRouteAdmin exact path={[\"/admin/planos\"]} component={AdminScholarity} />\n                    <PrivateRouteAdmin exact path={[\"/admin/usuarios\"]} component={AdminScholarity} />\n                    <PrivateRouteAdmin exact path={[\"/admin/compras\"]} component={AdminScholarity} />\n                    <PrivateRouteAdmin exact path={[\"/admin/materias\"]} component={AdminSubject} />\n                    <PrivateRouteAdmin exact path={[\"/admin/assuntos\"]} component={AdminSubjectMatter} />\n                    <PrivateRouteAdmin exact path={[\"/admin/forcas\"]} component={AdminArmedForce} />\n                    <PrivateRouteAdmin exact path={[\"/admin/patentes\"]} component={AdminPatent} />\n                    <PrivateRouteAdmin exact path={[\"/admin/escolaridades\"]} component={AdminScholarity} />\n\n                    {/* Default */}\n                    <Route path=\"*\" component={NotFound} />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default AppNavigator;\n","import React from 'react';\nimport AppNavigator from './navigations/AppNavigator';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/app.css';\n\nfunction App() {\n  return (\n    <AppNavigator />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_home\":\"adminHome_div_home__lbg4x\",\"h_home\":\"adminHome_h_home__2IHRS\",\"div_row_menu\":\"adminHome_div_row_menu__2sHN_\",\"card_menu\":\"adminHome_card_menu__3E00I\",\"card_body_menu\":\"adminHome_card_body_menu__3UJTo\",\"icon_menu\":\"adminHome_icon_menu__b_RgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"headerAdmin_header__1dNik\",\"navbar_brand\":\"headerAdmin_navbar_brand__1vbUA\",\"img_logo\":\"headerAdmin_img_logo__3BoES\",\"nav_link\":\"headerAdmin_nav_link__2W9jj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_buttons\":\"admin_div_buttons__3QOJ9\",\"h_title\":\"admin_h_title__273e9\",\"btn_menu\":\"admin_btn_menu__8-9HY\",\"btn_add\":\"admin_btn_add__3in92\",\"btn_table_primary\":\"admin_btn_table_primary__29U_l\",\"btn_table_secondary\":\"admin_btn_table_secondary__39C68\",\"td_buttons\":\"admin_td_buttons__1EitR\",\"form_label_required\":\"admin_form_label_required__2MmER\",\"form_alternative\":\"admin_form_alternative__2N7Yy\",\"btn_add_alternative\":\"admin_btn_add_alternative__3Byk0\",\"btn_remove_alternative\":\"admin_btn_remove_alternative__mtlIY\",\"btn_incorrect_alternative\":\"admin_btn_incorrect_alternative__2bdoP\",\"btn_correct_alternative\":\"admin_btn_correct_alternative__25YVv\",\"input_file\":\"admin_input_file__3KO6s\",\"div_btn_remove\":\"admin_div_btn_remove__1pkVm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2c7h-\",\"navbar_brand\":\"header_navbar_brand__aV8ID\",\"img_logo\":\"header_img_logo__2vwP5\",\"nav_link\":\"header_nav_link__1aC1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_full\":\"adminLogin_div_full__21Bcf\",\"card_login\":\"adminLogin_card_login__3As10\",\"img_logo\":\"adminLogin_img_logo__1G4Nc\",\"form_label_login\":\"adminLogin_form_label_login__216gV\",\"form_control_login\":\"adminLogin_form_control_login__3HsZk\",\"btn_login\":\"adminLogin_btn_login__ZlbRi\",\"h_registration\":\"adminLogin_h_registration__-7IlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_full\":\"notFound_div_full__2HG49\",\"card_login\":\"notFound_card_login__1o5Wi\",\"img_logo\":\"notFound_img_logo__1dSFk\",\"h_registration\":\"notFound_h_registration__3yQLo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_footer\":\"footer_div_footer__DMkPS\"};"],"sourceRoot":""}